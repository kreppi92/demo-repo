{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Signup.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport logoIcon from '../../images/logo.png';\nimport Footer from './Footer';\nimport Firebase from '../../constants/firebase';\nimport CustomSnackbar from '../shared/CustomSnackbar';\nconst styles = {\n  boldText: {\n    fontWeight: 700\n  },\n  button: {\n    margin: '30px 0 0 0'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    '@media (min-width:780px)': {\n      top: '16%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    }\n  },\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  linkContainerVerification: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n  textField: {\n    marginTop: '25px'\n  },\n  verificationText: {\n    fontSize: '15px',\n    margin: '30px 0 0 0',\n    letterSpacing: 0.3,\n    lineHeight: '20px'\n  }\n};\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: '',\n      codeHelperText: '',\n      codeError: false,\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      password: '',\n      passwordHelperText: '',\n      passwordError: false,\n      verificationSent: false,\n      snackbarIsOpen: false,\n      snackbarVariant: 'success',\n      snackbarMessage: ''\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false,\n        passwordHelperText: '',\n        passwordError: false,\n        codeHelperText: '',\n        codeError: false\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.validateForms();\n    };\n\n    this.onSnackBarClose = () => {\n      this.setState({\n        snackbarIsOpen: false\n      });\n    };\n\n    this.displaySnackbar = (variant, message) => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: variant,\n        snackbarMessage: message\n      });\n    };\n\n    this.checkExistingUser = email => {\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.sendVerificationCode = email => {\n      this.setState({\n        isLoading: true\n      });\n      var generateCode = Firebase.functions().httpsCallable('generateCode');\n      generateCode({\n        email: email\n      }).then(function (result) {\n        console.log(\"Result is\", result);\n\n        if (result.data.success) {\n          alert(result.data.success);\n        } else {\n          alert(result.data.error);\n          this.setState({\n            isLoading: false\n          });\n        }\n      }.bind(this));\n    };\n\n    this.createAccount = (email, password) => {\n      this.setState({\n        isLoading: true\n      });\n      var signUp = Firebase.functions().httpsCallable('signUp');\n      signUp({\n        email: email,\n        password: password\n      }).then(function (result) {\n        if (result.data.success) {\n          this.sendEmail();\n        } else {\n          alert(result.data.error);\n          this.setState({\n            isLoading: false\n          });\n        }\n      }.bind(this));\n    };\n\n    this.sendEmail = () => {\n      const email = this.state.email;\n      var sendEmail = Firebase.functions().httpsCallable('sendEmail');\n      sendEmail({\n        email: email\n      }).then(function (result) {\n        if (result.data.success) {\n          this.setState({\n            verificationSent: true\n          });\n        } else {\n          alert(result.data.error);\n        }\n\n        this.setState({\n          isLoading: false\n        });\n      }.bind(this));\n    };\n  }\n\n  validateForms() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var passwordHasError = false;\n    var passwordErrorText = \"\";\n\n    if (password === \"\") {\n      passwordHasError = true;\n      passwordErrorText = \"Please enter a password.\";\n    }\n\n    if (emailHasError || passwordHasError) {\n      this.displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText);\n    } else {\n      //this.createAccount(email, password)\n      this.sendVerificationCode(email);\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          code = _this$state2.code,\n          codeError = _this$state2.codeError,\n          codeHelperText = _this$state2.codeHelperText,\n          email = _this$state2.email,\n          emailHelperText = _this$state2.emailHelperText,\n          emailError = _this$state2.emailError,\n          password = _this$state2.password,\n          passwordHelperText = _this$state2.passwordHelperText,\n          passwordError = _this$state2.passwordError,\n          isLoading = _this$state2.isLoading,\n          snackbarIsOpen = _this$state2.snackbarIsOpen,\n          snackbarMessage = _this$state2.snackbarMessage,\n          snackbarVariant = _this$state2.snackbarVariant,\n          verificationSent = _this$state2.verificationSent;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, verificationSent ? React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Confirm verification\"), React.createElement(\"div\", {\n      className: classes.verificationText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Please enter the 6 digit verification code sent to \", React.createElement(\"span\", {\n      className: classes.boldText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, email), \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), \"If you did not receive it in your main inbox, please check your junk folder.\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: codeError,\n      className: classes.textField,\n      id: \"outlined-code\",\n      label: \"Code\",\n      name: \"code\",\n      type: \"text\",\n      helperText: codeHelperText,\n      value: code,\n      onChange: this.handleChange('code'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }) : 'Verify code'), React.createElement(\"div\", {\n      className: classes.linkContainerVerification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.sendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Resend activation code?\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Sign in\"))) : React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      error: passwordError,\n      className: classes.textField,\n      id: \"outlined-password\",\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      helperText: passwordHelperText,\n      onChange: this.handleChange('password'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }) : 'Create account'), React.createElement(\"div\", {\n      className: classes.linkContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Existing account? Sign in now\")))), React.createElement(\"div\", {\n      className: classes.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    })), React.createElement(CustomSnackbar, {\n      variant: snackbarVariant,\n      message: snackbarMessage,\n      open: snackbarIsOpen,\n      onSnackBarClose: this.onSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Signup);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Signup.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Paper","Typography","TextField","withStyles","palette","logoIcon","Footer","Firebase","CustomSnackbar","styles","boldText","fontWeight","button","margin","container","display","justifyContent","contentContainer","alignItems","flexDirection","padding","footer","width","paper","position","boxShadow","borderRadius","top","border","borderColor","gray","linkContainer","linkContainerVerification","link","color","blue","fontSize","textDecoration","marginBottom","objectFit","height","textField","marginTop","verificationText","letterSpacing","lineHeight","Signup","state","code","codeHelperText","codeError","email","emailHelperText","emailError","password","passwordHelperText","passwordError","verificationSent","snackbarIsOpen","snackbarVariant","snackbarMessage","handleChange","name","event","setState","target","value","handleOnClick","validateForms","onSnackBarClose","displaySnackbar","variant","message","checkExistingUser","isLoading","sendVerificationCode","generateCode","functions","httpsCallable","then","result","console","log","data","success","alert","error","bind","createAccount","signUp","sendEmail","emailHasError","emailErrorText","passwordHasError","passwordErrorText","displayFormError","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport logoIcon from '../../images/logo.png'\nimport Footer from './Footer'\nimport Firebase from '../../constants/firebase'\nimport CustomSnackbar from '../shared/CustomSnackbar'\n\nconst styles = {\n  boldText: {\n    fontWeight: 700\n  },\n\n  button: {\n    margin: '30px 0 0 0'\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n\n  contentContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n\n    '@media (min-width:780px)': {\n      top: '16%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    },\n  },\n\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  linkContainerVerification: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n\n  textField: {\n    marginTop: '25px'\n  },\n\n  verificationText: {\n    fontSize: '15px',\n    margin: '30px 0 0 0',\n    letterSpacing: 0.3,\n    lineHeight: '20px',\n  }\n}\n\nclass Signup extends Component {\n  state = {\n    code: '',\n    codeHelperText: '',\n    codeError: false,\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    password: '',\n    passwordHelperText: '',\n    passwordError: false,\n    verificationSent: false,\n    snackbarIsOpen: false,\n    snackbarVariant: 'success',\n    snackbarMessage: ''\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false,\n      passwordHelperText: '',\n      passwordError: false,\n      codeHelperText: '',\n      codeError: false\n    })\n  }\n\n  handleOnClick = event => {\n    this.validateForms()\n  }\n\n  validateForms() {\n    const { email, password } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n\n    if (email === \"\") {\n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    var passwordHasError = false\n    var passwordErrorText = \"\"\n\n    if (password === \"\") {\n      passwordHasError = true\n      passwordErrorText = \"Please enter a password.\"\n    }\n\n    if (emailHasError || passwordHasError) {\n      this.displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText)\n    } else {\n      //this.createAccount(email, password)\n      this.sendVerificationCode(email)\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText\n    })\n  }\n\n  onSnackBarClose = () => {\n    this.setState({\n      snackbarIsOpen: false\n    })\n  }\n\n  displaySnackbar = (variant, message) => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: variant,\n      snackbarMessage: message\n    })\n  }\n\n  checkExistingUser = (email) => {\n    this.setState({ isLoading: true })\n\n  }\n\n  sendVerificationCode = (email) => {\n    this.setState({ isLoading: true })\n\n    var generateCode = Firebase.functions().httpsCallable('generateCode')\n    generateCode({ email: email }).then(function (result) {\n      console.log(\"Result is\", result )\n      if (result.data.success) {\n        alert(result.data.success)\n      } else {\n        alert(result.data.error)\n        this.setState({ isLoading: false })\n      }\n    }.bind(this))\n  }\n\n  createAccount = (email, password) => {\n    this.setState({ isLoading: true })\n\n    var signUp = Firebase.functions().httpsCallable('signUp')\n    signUp({ email: email, password: password }).then(function (result) {\n      if (result.data.success) {\n        this.sendEmail()\n      } else {\n        alert(result.data.error)\n        this.setState({ isLoading: false })\n      }\n    }.bind(this))\n  }\n\n  sendEmail = () => {\n    const { email } = this.state\n\n    var sendEmail = Firebase.functions().httpsCallable('sendEmail')\n    sendEmail({ email: email }).then(function (result) {\n      if (result.data.success) {\n        this.setState({ verificationSent: true})\n      } else {\n        alert(result.data.error)\n      }\n\n      this.setState({ isLoading: false })\n    }.bind(this))\n  }\n\n  render() {\n    const { classes } = this.props\n    const { code, codeError, codeHelperText, email, emailHelperText, emailError, password, passwordHelperText, passwordError, isLoading, snackbarIsOpen, snackbarMessage, snackbarVariant, verificationSent } = this.state\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n            {\n              verificationSent ?\n\n              <div className={classes.contentContainer}>\n                <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n                <Typography variant=\"h4\" gutterBottom>\n                  Confirm verification\n                </Typography>\n\n                <div className={classes.verificationText}>\n                  Please enter the 6 digit verification code sent to <span className={classes.boldText}>{email}</span>.<br /><br />If you did not receive it in your main inbox, please check your junk folder.\n                </div>\n\n                <TextField\n                  fullWidth\n                  error={codeError}\n                  className={classes.textField}\n                  id=\"outlined-code\"\n                  label=\"Code\"\n                  name=\"code\"\n                  type=\"text\"\n                  helperText={codeHelperText}\n                  value={code}\n                  onChange={this.handleChange('code')}\n                  variant=\"outlined\"\n                />\n\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={'contained'}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleOnClick}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                      'Verify code'\n                  )}\n                </Button>\n\n                <div className={classes.linkContainerVerification}>\n                  <a className={classes.link} href={\"#\"} onClick={this.sendEmail}>Resend activation code?</a>\n                  <a className={classes.link} href={\"/\"}>Sign in</a>\n                </div>\n              </div>\n\n              :\n\n              <div className={classes.contentContainer}>\n                <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n                <Typography variant=\"h4\" gutterBottom>\n                  Create an account\n                </Typography>\n\n                <TextField\n                  fullWidth\n                  error={emailError}\n                  className={classes.textField}\n                  id=\"outlined-email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  helperText={emailHelperText}\n                  value={email}\n                  onChange={this.handleChange('email')}\n                  variant=\"outlined\"\n                />\n\n                <TextField\n                  fullWidth\n                  error={passwordError}\n                  className={classes.textField}\n                  id=\"outlined-password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  helperText={passwordHelperText}\n                  onChange={this.handleChange('password')}\n                  variant=\"outlined\"\n                />\n\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={'contained'}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleOnClick}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                      'Create account'\n                    )}\n                </Button>\n\n                <div className={classes.linkContainer}>\n                  <div />\n                  <a className={classes.link} href={\"/\"}>Existing account? Sign in now</a>\n                </div>\n\n              </div>\n            }\n        </Paper>\n        <div className={classes.footer}>\n          <Footer />\n        </div>\n        <CustomSnackbar variant={snackbarVariant} message={snackbarMessage} open={snackbarIsOpen} onSnackBarClose={this.onSnackBarClose}/>\n      </div>\n    )\n  }\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Signup)"]},"metadata":{},"sourceType":"module"}