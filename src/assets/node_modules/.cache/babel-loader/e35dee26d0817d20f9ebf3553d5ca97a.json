{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Signup.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport logoIcon from '../../images/logo.png';\nimport Footer from './Footer';\nimport Firebase from '../../constants/firebase';\nimport CustomSnackbar from '../shared/CustomSnackbar';\n\nvar store = require('store');\n\nconst styles = {\n  boldText: {\n    fontWeight: 700\n  },\n  button: {\n    margin: '30px 0 0 0'\n  },\n  checkBoxContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    justifyContent: 'flex-start',\n    lineHeight: '16px',\n    letterSpacing: 0.2,\n    margin: '0 0 5px -10px'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  formHelperText: {\n    fontWeight: 'normal',\n    letterSpacing: 0.2,\n    margin: '10px 0 20px 0'\n  },\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    '@media (min-width:780px)': {\n      top: '16%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    }\n  },\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  linkContainerVerification: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n  textField: {\n    marginTop: '25px'\n  },\n  verificationText: {\n    fontSize: '15px',\n    margin: '30px 0 0 0',\n    letterSpacing: 0.3,\n    lineHeight: '20px'\n  }\n};\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: '',\n      codeHelperText: '',\n      codeError: false,\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      password: '',\n      passwordHelperText: '',\n      passwordError: false,\n      verificationSent: false,\n      snackbarIsOpen: false,\n      snackbarVariant: 'success',\n      snackbarMessage: ''\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false,\n        passwordHelperText: '',\n        passwordError: false,\n        codeHelperText: '',\n        codeError: false\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.validateForms();\n    };\n\n    this.onSnackBarClose = () => {\n      this.setState({\n        snackbarIsOpen: false\n      });\n    };\n\n    this.displaySnackbar = (variant, message) => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: variant,\n        snackbarMessage: message,\n        isLoading: false\n      });\n    };\n\n    this.sendVerificationCode = () => {\n      const email = this.state.email;\n      this.setState({\n        isLoading: true\n      });\n      var generateCode = Firebase.functions().httpsCallable('generateCode');\n      generateCode({\n        email: email\n      }).then(function (result) {\n        if (result.data.success) {\n          this.setState({\n            verificationSent: true,\n            isLoading: false\n          });\n        } else {\n          this.displaySnackbar('error', result.data.error);\n        }\n      }.bind(this));\n    };\n\n    this.handleCodeVerification = () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            code = _this$state.code;\n      var codeHasError = false;\n      var codeErrorText = \"\";\n\n      if (code === \"\") {\n        codeHasError = true;\n        codeErrorText = \"Please enter your verification code.\";\n      }\n\n      if (codeHasError) {\n        this.setState({\n          codeError: codeHasError,\n          codeHelperText: codeErrorText\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        var verifyCode = Firebase.functions().httpsCallable('verifyCode');\n        verifyCode({\n          email: email,\n          code: code\n        }).then(function (result) {\n          if (result.data.success) {\n            this.createAccount();\n          } else {\n            this.displaySnackbar('error', result.data.error);\n          }\n        }.bind(this));\n      }\n    };\n\n    this.createAccount = () => {\n      const _this$state2 = this.state,\n            email = _this$state2.email,\n            password = _this$state2.password;\n      var signUp = Firebase.functions().httpsCallable('signUp');\n      signUp({\n        email: email,\n        password: password\n      }).then(function (result) {\n        if (result.data.success) {\n          store.set('token', result.data.token);\n          this.displaySnackbar('success', \"Account successfully created.\");\n          window.location = '/home';\n        } else {\n          this.displaySnackbar('error', result.data.error);\n        }\n      }.bind(this));\n    };\n  }\n\n  validateForms() {\n    const _this$state3 = this.state,\n          email = _this$state3.email,\n          password = _this$state3.password;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var passwordHasError = false;\n    var passwordErrorText = \"\";\n\n    if (password === \"\") {\n      passwordHasError = true;\n      passwordErrorText = \"Please enter a password.\";\n    }\n\n    if (emailHasError || passwordHasError) {\n      this.displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText);\n    } else {\n      this.sendVerificationCode();\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state4 = this.state,\n          code = _this$state4.code,\n          codeError = _this$state4.codeError,\n          codeHelperText = _this$state4.codeHelperText,\n          email = _this$state4.email,\n          emailHelperText = _this$state4.emailHelperText,\n          emailError = _this$state4.emailError,\n          password = _this$state4.password,\n          passwordHelperText = _this$state4.passwordHelperText,\n          passwordError = _this$state4.passwordError,\n          isLoading = _this$state4.isLoading,\n          snackbarIsOpen = _this$state4.snackbarIsOpen,\n          snackbarMessage = _this$state4.snackbarMessage,\n          snackbarVariant = _this$state4.snackbarVariant,\n          verificationSent = _this$state4.verificationSent;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, verificationSent ? React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Confirm verification\"), React.createElement(\"div\", {\n      className: classes.verificationText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Please enter the 6 digit verification code sent to \", React.createElement(\"span\", {\n      className: classes.boldText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, email), \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), \"If you did not receive it in your main inbox, please check your junk folder.\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: codeError,\n      className: classes.textField,\n      id: \"outlined-code\",\n      label: \"Code\",\n      name: \"code\",\n      type: \"text\",\n      helperText: codeHelperText,\n      value: code,\n      onChange: this.handleChange('code'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleCodeVerification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }) : 'Verify code'), React.createElement(\"div\", {\n      className: classes.linkContainerVerification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.sendVerificationCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Resend activation code?\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Sign in\"))) : React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      error: passwordError,\n      className: classes.textField,\n      id: \"outlined-password\",\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      helperText: passwordHelperText,\n      onChange: this.handleChange('password'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      required: true,\n      error: termsError,\n      component: \"fieldset\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.checkBoxContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: terms,\n      onChange: this.handleTermsChange('terms'),\n      value: \"terms\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"I agree to the \", React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/terms\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"terms of this giveaway\"), \" and to receive further communication.\")), termsError ? React.createElement(FormHelperText, {\n      className: classes.formHelperText,\n      error: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"You must agree to the terms to proceed.\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }) : 'Create account'), React.createElement(\"div\", {\n      className: classes.linkContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Existing account? Sign in now\")))), React.createElement(\"div\", {\n      className: classes.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(CustomSnackbar, {\n      variant: snackbarVariant,\n      message: snackbarMessage,\n      open: snackbarIsOpen,\n      onSnackBarClose: this.onSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Signup);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Signup.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Checkbox","FormControl","FormHelperText","Paper","Typography","TextField","withStyles","palette","logoIcon","Footer","Firebase","CustomSnackbar","store","require","styles","boldText","fontWeight","button","margin","checkBoxContainer","alignItems","display","flexDirection","fontSize","justifyContent","lineHeight","letterSpacing","container","contentContainer","padding","formHelperText","footer","width","paper","position","boxShadow","borderRadius","top","border","borderColor","gray","linkContainer","linkContainerVerification","link","color","blue","textDecoration","marginBottom","objectFit","height","textField","marginTop","verificationText","Signup","state","code","codeHelperText","codeError","email","emailHelperText","emailError","password","passwordHelperText","passwordError","verificationSent","snackbarIsOpen","snackbarVariant","snackbarMessage","handleChange","name","event","setState","target","value","handleOnClick","validateForms","onSnackBarClose","displaySnackbar","variant","message","isLoading","sendVerificationCode","generateCode","functions","httpsCallable","then","result","data","success","error","bind","handleCodeVerification","codeHasError","codeErrorText","verifyCode","createAccount","signUp","set","token","window","location","emailHasError","emailErrorText","passwordHasError","passwordErrorText","displayFormError","render","classes","props","termsError","terms","handleTermsChange","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport logoIcon from '../../images/logo.png'\nimport Footer from './Footer'\nimport Firebase from '../../constants/firebase'\nimport CustomSnackbar from '../shared/CustomSnackbar'\n\nvar store = require('store')\n\nconst styles = {\n  boldText: {\n    fontWeight: 700\n  },\n\n  button: {\n    margin: '30px 0 0 0'\n  },\n\n  checkBoxContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    justifyContent: 'flex-start',\n    lineHeight: '16px',\n    letterSpacing: 0.2,\n    margin: '0 0 5px -10px'\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n\n  contentContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  formHelperText: {\n    fontWeight: 'normal',\n    letterSpacing: 0.2,\n    margin: '10px 0 20px 0'\n  },\n\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n\n    '@media (min-width:780px)': {\n      top: '16%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    },\n  },\n\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  linkContainerVerification: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n\n  textField: {\n    marginTop: '25px'\n  },\n\n  verificationText: {\n    fontSize: '15px',\n    margin: '30px 0 0 0',\n    letterSpacing: 0.3,\n    lineHeight: '20px',\n  }\n}\n\nclass Signup extends Component {\n  state = {\n    code: '',\n    codeHelperText: '',\n    codeError: false,\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    password: '',\n    passwordHelperText: '',\n    passwordError: false,\n    verificationSent: false,\n    snackbarIsOpen: false,\n    snackbarVariant: 'success',\n    snackbarMessage: ''\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false,\n      passwordHelperText: '',\n      passwordError: false,\n      codeHelperText: '',\n      codeError: false\n    })\n  }\n\n  handleOnClick = event => {\n    this.validateForms()\n  }\n\n  validateForms() {\n    const { email, password } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n\n    if (email === \"\") {\n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    var passwordHasError = false\n    var passwordErrorText = \"\"\n\n    if (password === \"\") {\n      passwordHasError = true\n      passwordErrorText = \"Please enter a password.\"\n    }\n\n    if (emailHasError || passwordHasError) {\n      this.displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText)\n    } else {\n      this.sendVerificationCode()\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, passwordHasError, passwordErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText\n    })\n  }\n\n  onSnackBarClose = () => {\n    this.setState({\n      snackbarIsOpen: false\n    })\n  }\n\n  displaySnackbar = (variant, message) => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: variant,\n      snackbarMessage: message,\n      isLoading: false\n    })\n  }\n\n  sendVerificationCode = () => {\n    const { email } = this.state\n\n    this.setState({ isLoading: true })\n\n    var generateCode = Firebase.functions().httpsCallable('generateCode')\n    generateCode({ email: email }).then(function (result) {\n      if (result.data.success) {\n        this.setState({ \n          verificationSent: true,\n          isLoading: false\n         })\n      } else {\n        this.displaySnackbar('error', result.data.error)\n      }\n    }.bind(this))\n  }\n\n  handleCodeVerification = () => {\n    const { email, code } = this.state\n\n    var codeHasError = false\n    var codeErrorText = \"\"\n\n    if (code === \"\") {\n      codeHasError = true\n      codeErrorText = \"Please enter your verification code.\"\n    }\n\n    if (codeHasError) {\n      this.setState({\n        codeError: codeHasError,\n        codeHelperText: codeErrorText,\n      })\n    } else {\n      this.setState({ isLoading: true })\n\n      var verifyCode = Firebase.functions().httpsCallable('verifyCode')\n      verifyCode({ email: email, code: code }).then(function (result) {\n        if (result.data.success) {\n          this.createAccount()\n        } else {\n          this.displaySnackbar('error', result.data.error)\n        }\n      }.bind(this))\n    }\n  }\n\n  createAccount = () => {\n    const { email, password } = this.state\n\n    var signUp = Firebase.functions().httpsCallable('signUp')\n    signUp({ email: email, password: password }).then(function (result) {\n      if (result.data.success) {\n        store.set('token', result.data.token)\n        this.displaySnackbar('success', \"Account successfully created.\")\n        window.location = '/home'\n      } else {\n        this.displaySnackbar('error', result.data.error)\n      }\n    }.bind(this))\n  }\n\n  render() {\n    const { classes } = this.props\n    const { code, codeError, codeHelperText, email, emailHelperText, emailError, password, passwordHelperText, passwordError, isLoading, snackbarIsOpen, snackbarMessage, snackbarVariant, verificationSent } = this.state\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n            {\n              verificationSent ?\n\n              <div className={classes.contentContainer}>\n                <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n                <Typography variant=\"h4\" gutterBottom>\n                  Confirm verification\n                </Typography>\n\n                <div className={classes.verificationText}>\n                  Please enter the 6 digit verification code sent to <span className={classes.boldText}>{email}</span>.<br /><br />If you did not receive it in your main inbox, please check your junk folder.\n                </div>\n\n                <TextField\n                  fullWidth\n                  error={codeError}\n                  className={classes.textField}\n                  id=\"outlined-code\"\n                  label=\"Code\"\n                  name=\"code\"\n                  type=\"text\"\n                  helperText={codeHelperText}\n                  value={code}\n                  onChange={this.handleChange('code')}\n                  variant=\"outlined\"\n                />\n\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={'contained'}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleCodeVerification}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                      'Verify code'\n                  )}\n                </Button>\n\n                <div className={classes.linkContainerVerification}>\n                  <a className={classes.link} href={\"#\"} onClick={this.sendVerificationCode}>Resend activation code?</a>\n                  <a className={classes.link} href={\"/signin\"}>Sign in</a>\n                </div>\n              </div>\n\n              :\n\n              <div className={classes.contentContainer}>\n                <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n                <Typography variant=\"h4\" gutterBottom>\n                  Create an account\n                </Typography>\n\n                <TextField\n                  fullWidth\n                  error={emailError}\n                  className={classes.textField}\n                  id=\"outlined-email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  helperText={emailHelperText}\n                  value={email}\n                  onChange={this.handleChange('email')}\n                  variant=\"outlined\"\n                />\n\n                <TextField\n                  fullWidth\n                  error={passwordError}\n                  className={classes.textField}\n                  id=\"outlined-password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  helperText={passwordHelperText}\n                  onChange={this.handleChange('password')}\n                  variant=\"outlined\"\n                />\n\n              <FormControl required error={termsError} component=\"fieldset\" fullWidth>\n                <div className={classes.checkBoxContainer}>\n                  <Checkbox checked={terms} onChange={this.handleTermsChange('terms')} value=\"terms\" color=\"primary\" />\n                  <div>I agree to the <a className={classes.link} href={\"/terms\"} target=\"_blank\" rel=\"noopener noreferrer\">terms of this giveaway</a> and to receive further communication.</div>\n                </div>\n\n                {termsError ? <FormHelperText className={classes.formHelperText} error>You must agree to the terms to proceed.</FormHelperText> : <div />}\n              </FormControl>\n\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={'contained'}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleOnClick}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                      'Create account'\n                    )}\n                </Button>\n\n                <div className={classes.linkContainer}>\n                  <div />\n                  <a className={classes.link} href={\"/signin\"}>Existing account? Sign in now</a>\n                </div>\n\n              </div>\n            }\n        </Paper>\n        <div className={classes.footer}>\n          <Footer />\n        </div>\n        <CustomSnackbar variant={snackbarVariant} message={snackbarMessage} open={snackbarIsOpen} onSnackBarClose={this.onSnackBarClose}/>\n      </div>\n    )\n  }\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Signup)"]},"metadata":{},"sourceType":"module"}