{"ast":null,"code":"/*\n* @Author: shubhambansal\n* @Date:   2018-10-27 06:30:04\n* @Last Modified by:   shubhambansal\n* @Last Modified time: 2018-10-27 06:59:59\n*/\n(function (escope) {\n  \"use strict\";\n\n  function validUrl(url) {\n    return /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/gi.test(url);\n  }\n\n  function validTypePdf(pdf) {\n    return /(\\.(pdf))/gi.test(pdf);\n  }\n\n  function base64ToBrowser(buffer) {\n    return window.btoa([].slice.call(new Uint8Array(buffer)).map(function (bin) {\n      return String.fromCharCode(bin);\n    }).join(\"\"));\n  }\n\n  function base64ToNode(buffer) {\n    return buffer.toString(\"base64\");\n  }\n\n  function readFileAndConvert(fileName) {\n    var fileSystem = require(\"fs\");\n\n    var path = require(\"path\");\n\n    if (fileSystem.statSync(fileName).isFile()) {\n      return base64ToNode(fileSystem.readFileSync(path.resolve(fileName)).toString(\"base64\"));\n    }\n\n    return null;\n  }\n\n  function isPdf(urlOrPdf) {\n    if (validTypePdf(urlOrPdf)) {\n      return Promise.resolve(readFileAndConvert(urlOrPdf));\n    } else {\n      return Promise.reject(\"[*] Occurent some error... [validTypePdf] == false\");\n    }\n  }\n\n  function isBrowser(urlOrPdf, param) {\n    if (!(\"fetch\" in window && \"Promise\" in window)) {\n      return Promise.reject(\"[*] It's pdf2base64 not compatible with your browser.\");\n    }\n\n    return fetch(urlOrPdf, param || {}).then(function (response) {\n      return response.arrayBuffer();\n    }).then(base64ToBrowser);\n  }\n\n  function isNodeJs(urlOrPdf) {\n    if (validUrl(urlOrPdf)) {\n      var fetch = require(\"node-fetch\");\n\n      return fetch(urlOrPdf).then(function (response) {\n        return response.buffer();\n      }).then(base64ToNode);\n    } else {\n      return isPdf(urlOrPdf);\n    }\n  }\n\n  function pdfToBase64(urlOrPdf, param) {\n    if (typeof window !== \"undefined\" && \"document\" in window && \"navigator\" in window) {\n      return isBrowser(urlOrPdf, param);\n    } else {\n      return isNodeJs(urlOrPdf);\n    }\n  }\n\n  if (typeof module !== \"undefined\") {\n    module.exports = pdfToBase64;\n  } else {\n    escope.pdfToBase64 = pdfToBase64;\n  }\n})(this);","map":null,"metadata":{},"sourceType":"script"}