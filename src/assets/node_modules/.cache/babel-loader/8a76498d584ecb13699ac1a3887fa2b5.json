{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { palette } from '../../constants/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chart from './Chart';\nimport closeIcon from \"../../images/close.svg\";\n\nvar QRCode = require('qrcode.react');\n\nconst EMAIL = \"email\";\nconst GIFT = \"gift\";\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n  cancelButton: {\n    background: palette.red[0],\n    margin: '25px 0 0 0',\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n  confirmButton: {\n    background: palette.green[0],\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n    '@media (min-width:780px)': {\n      width: '80%'\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '400px'\n  },\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    }\n  },\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n    '@media (min-width:1200px)': {\n      width: '65%'\n    }\n  },\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n  textField: {\n    margin: '0 0 25px 0'\n  }\n};\n\nclass Wallet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      amount: '',\n      amountHelperText: '',\n      amountError: false,\n      sendDialogOpen: false,\n      transactionType: 'sent',\n      transactionDialogOpen: false,\n      pendingConfirmation: false,\n      isLoading: false,\n      transactionType: EMAIL\n    };\n\n    this.handleChange = name => event => {\n      event.preventDefault();\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false,\n        amountHelperText: '',\n        amountError: false\n      });\n    };\n\n    this.handleTransactionSwitch = (event, newTransactionType) => {\n      this.setState({\n        transactionType: newTransactionType\n      });\n    };\n\n    this.handleSendDialogClose = () => {\n      this.setState({\n        sendDialogOpen: false\n      });\n    };\n\n    this.handleSendFunds = () => {\n      this.setState({\n        sendDialogOpen: true\n      });\n    };\n\n    this.handleDownloadGiftReceipt = () => {\n      this.validateForms(GIFT);\n    };\n\n    this.handleSendEmail = () => {\n      this.validateForms(EMAIL);\n    };\n\n    this.handleCancelTransaction = () => {\n      this.setState({\n        pendingConfirmation: false\n      });\n    };\n\n    this.handleViewTransactions = () => {\n      this.setState({\n        transactionDialogOpen: true\n      });\n    };\n\n    this.handleTransactionDialogClose = () => {\n      this.setState({\n        transactionDialogOpen: false\n      });\n    };\n\n    this.handleConfirmTransaction = () => {\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(function () {\n        this.setState({\n          sendDialogOpen: false,\n          email: '',\n          amount: '',\n          pendingConfirmation: false,\n          isLoading: false\n        });\n      }.bind(this), 1000);\n    };\n  }\n\n  validateForms(type) {\n    const _this$state = this.state,\n          email = _this$state.email,\n          amount = _this$state.amount;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var amountHasError = false;\n    var amountErrorText = \"\";\n\n    if (amount === \"\") {\n      amountHasError = true;\n      amountErrorText = \"Please enter an amount.\";\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true;\n      amountErrorText = \"This field should only contain numbers.\";\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText);\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      });\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          emailHelperText = _this$state2.emailHelperText,\n          emailError = _this$state2.emailError,\n          amount = _this$state2.amount,\n          amountHelperText = _this$state2.amountHelperText,\n          amountError = _this$state2.amountError,\n          sendDialogOpen = _this$state2.sendDialogOpen,\n          transactionType = _this$state2.transactionType,\n          transactionDialogOpen = _this$state2.transactionDialogOpen,\n          pendingConfirmation = _this$state2.pendingConfirmation,\n          isLoading = _this$state2.isLoading;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paperOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"0 Sats\"), \"0 BTC - $0.00\", React.createElement(QRCode, {\n      className: classes.qrCode,\n      color: palette.blue[0],\n      size: 160,\n      value: \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.sendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Copy\"), React.createElement(\"div\", {\n      className: classes.qrButtonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"primary\",\n      onClick: this.handleSendFunds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Send\"), React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"secondary\",\n      onClick: this.handleViewTransactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"View transactions\")))), React.createElement(Paper, {\n      className: classes.paperChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      onClose: this.handleSendDialogClose,\n      open: sendDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, pendingConfirmation ? React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Confirm transaction\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Send\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleSendDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: amountError,\n      className: classes.textField,\n      id: \"outlined-amount\",\n      label: \"Amount in Sats\",\n      name: \"amount\",\n      helperText: amountHelperText,\n      value: amount,\n      onChange: this.handleChange('amount'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), pendingConfirmation ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.confirmButton,\n      size: \"large\",\n      variant: 'contained',\n      fullWidth: true,\n      onClick: this.handleConfirmTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }) : 'Confirm transaction'), React.createElement(Button, {\n      disabled: isLoading,\n      className: classes.cancelButton,\n      size: \"large\",\n      variant: 'contained',\n      fullWidth: true,\n      onClick: this.handleCancelTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Cancel\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleSendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Send email\"), React.createElement(\"div\", {\n      className: classes.textSeperator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, \"Or\"), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleDownloadGiftReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Download gift receipt\")))), React.createElement(Dialog, {\n      fullWidth: true,\n      onClose: this.handleTransactionDialogClose,\n      open: transactionDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Transactions\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleTransactionDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }))), React.createElement(ToggleButtonGroup, {\n      value: transactionType,\n      exclusive: true,\n      onChange: this.handleTransactionSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"sent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Sent\"), React.createElement(ToggleButton, {\n      value: \"received\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Received\"), React.createElement(ToggleButton, {\n      value: \"deposits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"Deposits\")), React.createElement(\"div\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Wallet);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Dialog","IconButton","Paper","TextField","Typography","ToggleButton","ToggleButtonGroup","palette","withStyles","Chart","QRCode","require","EMAIL","GIFT","styles","address","fontSize","cancelButton","background","red","margin","confirmButton","green","container","display","flexDirection","justifyContent","flexWrap","width","contentContainer","alignItems","padding","dialogContent","dialogTitleContainer","fontWeight","height","iconButton","closeIcon","color","blue","link","textDecoration","list","overflow","paperOptions","boxShadow","borderRadius","minHeight","minWidth","border","borderColor","gray","paperChart","qrButtonContainer","maxWidth","qrButton","qrCode","textSeperator","textField","Wallet","state","email","emailHelperText","emailError","amount","amountHelperText","amountError","sendDialogOpen","transactionType","transactionDialogOpen","pendingConfirmation","isLoading","handleChange","name","event","preventDefault","setState","target","value","handleTransactionSwitch","newTransactionType","handleSendDialogClose","handleSendFunds","handleDownloadGiftReceipt","validateForms","handleSendEmail","handleCancelTransaction","handleViewTransactions","handleTransactionDialogClose","handleConfirmTransaction","setTimeout","bind","type","emailHasError","emailErrorText","amountHasError","amountErrorText","test","displayFormError","render","classes","props","sendEmail","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { palette } from '../../constants/styles'\nimport { withStyles } from '@material-ui/core/styles'\nimport Chart from './Chart'\nimport closeIcon from '../../images/close.svg'\n\nvar QRCode = require('qrcode.react')\n\nconst EMAIL = \"email\"\nconst GIFT = \"gift\"\n\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n\n  cancelButton: {\n    background: palette.red[0],\n    margin: '25px 0 0 0',\n\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n\n  confirmButton: {\n    background: palette.green[0],\n\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      width: '80%',\n    },\n  },\n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0',\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '400px'\n  },\n\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    },\n  },\n\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n\n    '@media (min-width:1200px)': {\n      width: '65%'\n    },\n  },\n\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n\n  textField: {\n    margin: '0 0 25px 0'\n  }\n}\n\nclass Wallet extends Component {\n  state = {\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    amount: '',\n    amountHelperText: '',\n    amountError: false,\n    sendDialogOpen: false,\n    transactionType: 'sent',\n    transactionDialogOpen: false,\n    pendingConfirmation: false,\n    isLoading: false,\n    transactionType: EMAIL\n  }\n\n  handleChange = name => event => {\n    event.preventDefault()\n\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false,\n      amountHelperText: '',\n      amountError: false\n    })\n  }\n\n  handleTransactionSwitch = (event, newTransactionType) => {\n    this.setState({ transactionType: newTransactionType })\n  }\n\n  handleSendDialogClose = () => {\n    this.setState({ sendDialogOpen: false })\n  }\n\n  handleSendFunds = () => {\n    this.setState({ sendDialogOpen: true })\n  }\n\n  handleDownloadGiftReceipt = () => {\n    this.validateForms(GIFT)\n  }\n\n  handleSendEmail = () => {\n    this.validateForms(EMAIL)\n  }\n\n  handleCancelTransaction = () => {\n    this.setState({ pendingConfirmation: false })\n  }\n\n  handleViewTransactions = () => {\n    this.setState({ transactionDialogOpen: true })\n  }\n\n  handleTransactionDialogClose = () => {\n    this.setState({ transactionDialogOpen: false })\n  }\n\n  handleConfirmTransaction = () => {\n    this.setState({ isLoading: true })\n\n    setTimeout(\n      function () {\n        this.setState({\n          sendDialogOpen: false,\n          email: '',\n          amount: '',\n          pendingConfirmation: false,\n          isLoading: false\n        })\n      }.bind(this),\n      1000,\n    )\n  }\n\n  validateForms(type) {\n    const { email, amount } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n\n    if (email === \"\") {\n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    var amountHasError = false\n    var amountErrorText = \"\"\n\n    if (amount === \"\") {\n      amountHasError = true\n      amountErrorText = \"Please enter an amount.\"\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true\n      amountErrorText = \"This field should only contain numbers.\"\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText)\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      })\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    })\n  }\n\n  render() {\n    const { email, emailHelperText, emailError, amount, amountHelperText, amountError, sendDialogOpen, transactionType, transactionDialogOpen, pendingConfirmation, isLoading } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paperOptions}>\n          <div className={classes.contentContainer}>\n            <Typography variant=\"h4\" gutterBottom>\n              0 Sats\n            </Typography>\n              0 BTC - $0.00\n\n            <QRCode className={classes.qrCode} color={palette.blue[0]} size={160} value=\"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\" />\n            <div className={classes.address}>1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9</div>\n            <a className={classes.link} href={\"#\"} onClick={this.sendEmail}>Copy</a>\n            <div className={classes.qrButtonContainer}>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"primary\" onClick={this.handleSendFunds}>\n                Send\n                </Button>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"secondary\" onClick={this.handleViewTransactions}>\n                View transactions\n                </Button>\n            </div>\n          </div>\n        </Paper>\n\n        <Paper className={classes.paperChart}>\n          <Chart />\n        </Paper>\n\n        <Dialog onClose={this.handleSendDialogClose} open={sendDialogOpen} disableBackdropClick>\n          <div className={classes.dialogContent}>\n\n            {pendingConfirmation ?\n              <div className={classes.dialogTitleContainer}>\n                Confirm transaction\n                  <div />\n              </div>\n              :\n              <div className={classes.dialogTitleContainer}>\n                Send\n\n                <IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleSendDialogClose}>\n                  <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n                </IconButton >\n              </div>\n            }\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange('email')}\n              variant=\"outlined\"\n            />\n\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={amountError}\n              className={classes.textField}\n              id=\"outlined-amount\"\n              label=\"Amount in Sats\"\n              name=\"amount\"\n              helperText={amountHelperText}\n              value={amount}\n              onChange={this.handleChange('amount')}\n              variant=\"outlined\"\n            />\n\n            {\n              pendingConfirmation ?\n\n                <div>\n                  <Button\n                    className={classes.confirmButton}\n                    size=\"large\"\n                    variant={'contained'}\n                    fullWidth\n                    onClick={this.handleConfirmTransaction}\n                  >\n                    {isLoading ? (\n                      <CircularProgress\n                        variant=\"indeterminate\"\n                        disableShrink\n                        size={24}\n                        thickness={4}\n                      />\n                    ) : (\n                        'Confirm transaction'\n                      )}\n                  </Button>\n\n                  <Button\n                    disabled={isLoading}\n                    className={classes.cancelButton}\n                    size=\"large\"\n                    variant={'contained'}\n                    fullWidth\n                    onClick={this.handleCancelTransaction}\n                  >\n                    Cancel\n                </Button>\n                </div>\n\n                :\n\n                <div>\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleSendEmail}\n                  >\n                    Send email\n                </Button>\n\n                  <div className={classes.textSeperator}>\n                    Or\n                </div>\n\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleDownloadGiftReceipt}\n                  >\n                    Download gift receipt\n                </Button>\n                </div>\n            }\n          </div>\n        </Dialog>\n\n        <Dialog fullWidth onClose={this.handleTransactionDialogClose} open={transactionDialogOpen} disableBackdropClick>\n          <div className={classes.dialogContent}>\n            <div className={classes.dialogTitleContainer}>\n              Transactions\n              \n              <IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleTransactionDialogClose}>\n                <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n              </IconButton >\n            </div>\n\n            <ToggleButtonGroup\n              value={transactionType}\n              exclusive\n              onChange={this.handleTransactionSwitch}\n            >\n              <ToggleButton value=\"sent\">\n                Sent\n              </ToggleButton>\n              <ToggleButton value=\"received\">\n                Received\n              </ToggleButton>\n              <ToggleButton value=\"deposits\">\n                Deposits\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <div className={classes.list}>\n\n            </div>\n\n          </div>\n        </Dialog>\n\n      </div>\n    )\n  }\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Wallet)"]},"metadata":{},"sourceType":"module"}