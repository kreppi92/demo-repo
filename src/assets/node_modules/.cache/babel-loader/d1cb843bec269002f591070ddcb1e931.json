{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/shared/CustomSnackbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green, red } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst styles = {\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: '10px'\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: red[600]\n  },\n  info: {\n    backgroundColor: palette.blue[0]\n  },\n  warning: {\n    backgroundColor: amber[700]\n  }\n};\n\nclass CustomSnackbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      const onClose = this.props.onClose;\n      onClose();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          variant = _this$props.variant,\n          message = _this$props.message,\n          open = _this$props.open;\n    const Icon = variantIcon[variant];\n    return React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: open,\n      autoHideDuration: 1000,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(SnackbarContent, {\n      className: clsx(classes[variant], className),\n      message: React.createElement(\"span\", {\n        id: \"client-snackbar\",\n        className: classes.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: clsx(classes.icon, classes.iconVariant),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), message),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCustomSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomSnackbar);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/shared/CustomSnackbar.js"],"names":["React","Component","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","amber","green","red","IconButton","Snackbar","SnackbarContent","WarningIcon","withStyles","palette","variantIcon","success","warning","error","info","styles","icon","fontSize","iconVariant","opacity","marginRight","message","display","alignItems","backgroundColor","blue","CustomSnackbar","handleClose","onClose","props","render","classes","variant","open","Icon","vertical","horizontal","className","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,GAAvB,QAAkC,0BAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAEd,eADS;AAElBe,EAAAA,OAAO,EAAEL,WAFS;AAGlBM,EAAAA,KAAK,EAAEf,SAHW;AAIlBgB,EAAAA,IAAI,EAAEf;AAJY,CAApB;AAOA,MAAMgB,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADO;AAKbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,GADE;AAEXC,IAAAA,WAAW,EAAE;AAFF,GALA;AAUbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE;AAFL,GAVI;AAebZ,EAAAA,OAAO,EAAE;AACPa,IAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD;AADf,GAfI;AAmBbW,EAAAA,KAAK,EAAE;AACLW,IAAAA,eAAe,EAAErB,GAAG,CAAC,GAAD;AADf,GAnBM;AAuBbW,EAAAA,IAAI,EAAE;AACJU,IAAAA,eAAe,EAAEf,OAAO,CAACgB,IAAR,CAAa,CAAb;AADb,GAvBO;AA0Bbb,EAAAA,OAAO,EAAE;AACPY,IAAAA,eAAe,EAAEvB,KAAK,CAAC,GAAD;AADf;AA1BI,CAAf;;AA+BA,MAAMyB,cAAN,SAA6BhC,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCiC,WADqC,GACvB,MAAM;AAAA,YACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;AAGlBA,MAAAA,OAAO;AACR,KALoC;AAAA;;AAOrCE,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKD,KAD1C;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,OADV,eACUA,OADV;AAAA,UACmBX,OADnB,eACmBA,OADnB;AAAA,UAC4BY,IAD5B,eAC4BA,IAD5B;AAEP,UAAMC,IAAI,GAAGxB,WAAW,CAACsB,OAAD,CAAxB;AAEA,WACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZG,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAEH,IALR;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEN,WAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAE/B,IAAI,CAACmC,OAAO,CAACC,OAAD,CAAR,EAAmBK,SAAnB,CADjB;AAEE,MAAA,OAAO,EACL;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAEN,OAAO,CAACV,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEzB,IAAI,CAACmC,OAAO,CAACf,IAAT,EAAee,OAAO,CAACb,WAAvB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGG,OAFH,CAHJ;AAQE,MAAA,MAAM,EAAE,CACN,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAC,OAAhB;AAAwB,sBAAW,OAAnC;AAA2C,QAAA,KAAK,EAAC,SAAjD;AAA2D,QAAA,OAAO,EAAE,KAAKM,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEI,OAAO,CAACf,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADM,CARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AA0BD;;AArCoC;;AAwCvCU,cAAc,CAACY,SAAf,GAA2B;AACzBP,EAAAA,OAAO,EAAEpC,SAAS,CAAC4C,MAAV,CAAiBC;AADD,CAA3B;AAIA,eAAehC,UAAU,CAACO,MAAD,CAAV,CAAmBW,cAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { amber, green, red } from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n}\n\nconst styles = {\n  icon: {\n    fontSize: 20,\n  },\n\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: '10px',\n  },\n\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  success: {\n    backgroundColor: green[600]\n  },\n\n  error: {\n    backgroundColor: red[600]\n  },\n\n  info: {\n    backgroundColor: palette.blue[0],\n  },\n  warning: {\n    backgroundColor: amber[700],\n  }\n}\n\nclass CustomSnackbar extends Component {\n  handleClose = () => {\n    const { onClose } = this.props\n\n    onClose()\n  }\n\n  render() {\n    const { classes, variant, message, open } = this.props\n    const Icon = variantIcon[variant]\n    \n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={1000}\n        onClose={handleClose}\n      >\n        <SnackbarContent\n          className={clsx(classes[variant], className)}\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\n              {message}\n            </span>\n          }\n          action={[\n            <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          ]}\n        />\n      </Snackbar>\n    )\n  } \n}\n\nCustomSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(CustomSnackbar)"]},"metadata":{},"sourceType":"module"}