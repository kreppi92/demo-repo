{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport bitcoinIcon from \"../../images/bitcoin.svg\";\nimport closeIcon from \"../../images/close.svg\";\nimport Chart from './Chart';\nimport Deposit from './Transactions/Deposit';\nimport Transaction from './Transactions/Transaction';\nimport Firebase from '../../constants/firebase';\nimport CustomSnackbar from '../shared/CustomSnackbar';\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport Certificate from \"./Certificate\";\n\nvar QRCode = require('qrcode.react');\n\nvar store = require('store');\n\nconst EMAIL = \"email\";\nconst GIFT = \"gift\";\nvar timerID = null;\nconst styles = {\n  address: {\n    fontSize: \"13px\"\n  },\n  circularProgress: {\n    color: palette.blue[0]\n  },\n  bitcoinIcon: {\n    height: \"100px\",\n    margin: \"0 0 20px 0\",\n    opacity: 0.2,\n    width: \"100px\"\n  },\n  cancelButton: {\n    background: palette.red[0],\n    margin: \"25px 0 0 0\",\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n  confirmButton: {\n    background: palette.green[0],\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    \"@media (min-width:780px)\": {\n      width: \"80%\"\n    }\n  },\n  contentContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"40px 20px 40px 20px\",\n    \"@media (min-width:780px)\": {\n      padding: \"40px 40px 40px 40px\"\n    }\n  },\n  dialogContent: {\n    padding: \"15px 20px 50px 20px\"\n  },\n  dialogTitleContainer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    fontSize: \"23px\",\n    fontWeight: 700,\n    height: \"60px\",\n    justifyContent: \"space-between\",\n    margin: \"10px 0 30px 0\",\n    padding: \"0 0 0 5px\"\n  },\n  iconButton: {\n    height: \"30px\",\n    width: \"30px\"\n  },\n  closeIcon: {\n    color: palette.blue[0],\n    margin: \"-5px -10px 0 0\"\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: \"13px\",\n    textDecoration: \"none\",\n    margin: \"5px 0 0 0\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  },\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"auto\",\n    height: \"340px\",\n    margin: \"20px 0 0 0\"\n  },\n  listEmpty: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    margin: \"20px 0 0 0\",\n    overflow: \"auto\",\n    height: \"340px\"\n  },\n  paperOptions: {\n    boxShadow: \"none\",\n    borderRadius: \"5px\",\n    margin: \"30px 0 0 0\",\n    minHeight: \"500px\",\n    minWidth: \"300px\",\n    width: \"100%\",\n    \"@media (min-width:780px)\": {\n      border: \"1px solid\",\n      borderColor: palette.gray[0],\n      margin: \"10vh 0 10vh 0\",\n      width: \"30%\"\n    }\n  },\n  paperOptionsEmpty: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    }\n  },\n  paperChart: {\n    boxShadow: \"none\",\n    borderRadius: \"5px\",\n    minHeight: \"500px\",\n    margin: \"30px 0 80px 0\",\n    width: \"100%\",\n    \"@media (min-width:780px)\": {\n      border: \"1px solid\",\n      borderColor: palette.gray[0],\n      margin: \"10vh 0 10vh 0\",\n      width: \"50%\"\n    },\n    \"@media (min-width:900px)\": {\n      width: \"55%\"\n    },\n    \"@media (min-width:1000px)\": {\n      width: \"60%\"\n    },\n    \"@media (min-width:1200px)\": {\n      width: \"65%\"\n    }\n  },\n  qrButtonContainer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    padding: \"40px 20px 0 20px\",\n    maxWidth: \"400px\",\n    width: \"100%\"\n  },\n  qrButton: {\n    height: \"50px\",\n    margin: \"0 0 15px 0\",\n    width: \"100%\"\n  },\n  qrCode: {\n    margin: \"60px 0 20px 0\"\n  },\n  textSeperator: {\n    alignItems: \"center\",\n    color: palette.blue[0],\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"18px\",\n    fontWeight: 700,\n    height: \"60px\",\n    justifyContent: \"center\"\n  },\n  textField: {\n    margin: \"0 0 25px 0\"\n  }\n};\n\nclass Wallet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      balance: '',\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      amount: \"\",\n      amountHelperText: \"\",\n      amountError: false,\n      sendDialogOpen: false,\n      transactionListType: \"sent\",\n      transactionDialogOpen: false,\n      pendingConfirmation: false,\n      isLoading: false,\n      transactionType: EMAIL,\n      receivedList: [],\n      sentList: [],\n      depositList: [],\n      snackbarIsOpen: false,\n      snackbarVariant: \"success\",\n      snackbarMessage: \"\"\n    };\n\n    this.getWalletAddress = token => {\n      var checkAddress = Firebase.functions().httpsCallable('checkAddress');\n      checkAddress({\n        token: token\n      }).then(function (result) {\n        if (result.data.success) {\n          this.setState({\n            address: result.data.address\n          });\n          this.getAllTransactions(token, result.data.address); //this.getOnchainTransactions(token, result.data.address)\n          //this.setOnchainTransactionService(token, result.data.address)\n        } else {\n          this.displaySnackbar('error', result.data.error);\n        }\n      }.bind(this));\n    };\n\n    this.setOnchainTransactionService = (token, address) => {\n      timerID = setInterval(function () {\n        this.getOnchainTransactions(token, address);\n      }.bind(this), 30000);\n    };\n\n    this.getAllTransactions = (token, address) => {\n      var onChainTransactions = this.getOnchainTransactions(token, address);\n      var sentTransactions = this.getSentTransactions(token);\n      var receivedTransactions = this.getReceivedTransactions(token);\n      Promise.all([onChainTransactions, sentTransactions, receivedTransactions]).then(responses => {\n        const deposits = responses[0].transfers;\n        const sentTransactions = responses[1];\n        const receivedTransactions = responses[2];\n        var balance = 0;\n        deposits.map((deposit, index) => {\n          console.log(deposit);\n\n          if (deposit.state === \"confirmed\" && deposit.type === \"receive\") {\n            balance += deposit.value;\n          }\n        });\n        sentTransactions.map((sentTransaction, index) => {\n          console.log(sentTransaction);\n          balance -= parseInt(sentTransaction.amount);\n        });\n        receivedTransactions.map((receivedTransaction, index) => {\n          console.log(receivedTransaction);\n          balance -= parseInt(receivedTransaction.amount);\n        });\n        this.setState({\n          balance: balance\n        });\n      });\n    };\n\n    this.getOnchainTransactions = (token, address) => {\n      var getOnchainTransactions = Firebase.functions().httpsCallable('getOnchainTransactions');\n      return getOnchainTransactions({\n        token: token,\n        address: address\n      }).then(function (result) {\n        if (result.data.success) {\n          return result.data.response;\n        } else {\n          return [];\n        }\n      }.bind(this));\n    };\n\n    this.getSentTransactions = token => {\n      var getSentTransactions = Firebase.functions().httpsCallable('getSentTransactions');\n      return getSentTransactions({\n        token: token\n      }).then(function (result) {\n        if (result.data.success) {\n          return result.data.transactions;\n        } else {\n          return [];\n        }\n      }.bind(this));\n    };\n\n    this.getReceivedTransactions = token => {\n      var getReceivedTransactions = Firebase.functions().httpsCallable('getReceivedTransactions');\n      return getReceivedTransactions({\n        token: token\n      }).then(function (result) {\n        if (result.data.success) {\n          return result.data.transactions;\n        } else {\n          return [];\n        }\n      }.bind(this));\n    };\n\n    this.displaySnackbar = (variant, message) => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: variant,\n        snackbarMessage: message\n      });\n    };\n\n    this.handleCopyCode = () => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: \"success\",\n        snackbarMessage: \"Your wallet address was successfully copied.\"\n      });\n    };\n\n    this.onSnackBarClose = () => {\n      this.setState({\n        snackbarIsOpen: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      event.preventDefault();\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: \"\",\n        emailError: false,\n        amountHelperText: \"\",\n        amountError: false\n      });\n    };\n\n    this.handleTransactionSwitch = (event, newTransactionListType) => {\n      this.setState({\n        transactionListType: newTransactionListType\n      });\n    };\n\n    this.handleSendDialogClose = () => {\n      this.setState({\n        sendDialogOpen: false\n      });\n    };\n\n    this.handleSendFunds = () => {\n      this.setState({\n        sendDialogOpen: true\n      });\n    };\n\n    this.handleDownloadGiftReceipt = () => {\n      this.validateForms(GIFT);\n    };\n\n    this.handleSendEmail = () => {\n      this.validateForms(EMAIL);\n    };\n\n    this.handleCancelTransaction = () => {\n      this.setState({\n        pendingConfirmation: false\n      });\n    };\n\n    this.handleViewTransactions = () => {\n      this.setState({\n        transactionDialogOpen: true\n      });\n    };\n\n    this.handleTransactionDialogClose = () => {\n      this.setState({\n        transactionDialogOpen: false\n      });\n    };\n\n    this.handleConfirmTransaction = () => {\n      const transactionType = this.state.transactionType;\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(function () {\n        // for gift\n        if (transactionType === GIFT) {\n          this.downloadGift();\n        }\n\n        this.setState({\n          sendDialogOpen: false,\n          pendingConfirmation: false,\n          isLoading: false\n        });\n      }.bind(this), 1000);\n    };\n\n    this.downloadGift = async () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            amount = _this$state.amount;\n      const blob = await pdf(React.createElement(Certificate, {\n        email: email,\n        amount: amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })).toBlob();\n      saveAs(blob, \"Certificate.pdf\");\n    };\n  }\n\n  componentDidMount() {\n    if (store.get('token')) {\n      this.getWalletAddress(store.get('token'));\n    }\n  }\n\n  componentDidUnmount() {\n    if (timerID) {\n      clearInterval(timerID);\n    }\n  }\n\n  validateForms(type) {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          amount = _this$state2.amount;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var amountHasError = false;\n    var amountErrorText = \"\";\n\n    if (amount === \"\") {\n      amountHasError = true;\n      amountErrorText = \"Please enter an amount.\";\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true;\n      amountErrorText = \"This field should only contain numbers.\";\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText);\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      });\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    });\n  }\n\n  getTransactions() {\n    const _this$state3 = this.state,\n          transactionListType = _this$state3.transactionListType,\n          sentList = _this$state3.sentList,\n          receivedList = _this$state3.receivedList,\n          depositList = _this$state3.depositList;\n    const classes = this.props.classes;\n\n    if (transactionListType === \"sent\") {\n      if (sentList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }), \"No sent transactions\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533\n          },\n          __self: this\n        }, sentList.map((transaction, index) => React.createElement(Transaction, {\n          key: index,\n          transaction: transaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        })));\n      }\n    } else if (transactionListType === \"received\") {\n      if (receivedList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546\n          },\n          __self: this\n        }), \"No received transactions\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552\n          },\n          __self: this\n        }, receivedList.map((transaction, index) => React.createElement(Transaction, {\n          key: index,\n          transaction: transaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555\n          },\n          __self: this\n        })));\n      }\n    } else if (transactionListType === \"deposits\") {\n      if (depositList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565\n          },\n          __self: this\n        }), \"No deposits\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571\n          },\n          __self: this\n        }, depositList.map((deposit, index) => React.createElement(Deposit, {\n          key: index,\n          deposit: deposit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          address = _this$state4.address,\n          balance = _this$state4.balance,\n          email = _this$state4.email,\n          emailHelperText = _this$state4.emailHelperText,\n          emailError = _this$state4.emailError,\n          amount = _this$state4.amount,\n          amountHelperText = _this$state4.amountHelperText,\n          amountError = _this$state4.amountError,\n          sendDialogOpen = _this$state4.sendDialogOpen,\n          snackbarIsOpen = _this$state4.snackbarIsOpen,\n          snackbarVariant = _this$state4.snackbarVariant,\n          snackbarMessage = _this$state4.snackbarMessage,\n          transactionListType = _this$state4.transactionListType,\n          transactionDialogOpen = _this$state4.transactionDialogOpen,\n          pendingConfirmation = _this$state4.pendingConfirmation,\n          isLoading = _this$state4.isLoading;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, address !== \"\" ? React.createElement(Paper, {\n      className: classes.paperOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, balance.toString(), \" Sats\"), \"0 BTC - $0.00\", React.createElement(QRCode, {\n      className: classes.qrCode,\n      color: palette.blue[0],\n      size: 160,\n      value: address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, address), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.handleCopyCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"Copy\"), React.createElement(\"div\", {\n      className: classes.qrButtonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"primary\",\n      onClick: this.handleSendFunds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, \"Send\"), React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"secondary\",\n      onClick: this.handleViewTransactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"View transactions\")))) : React.createElement(Paper, {\n      className: classes.paperOptionsEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.circularProgress,\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    })), React.createElement(Paper, {\n      className: classes.paperChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      onClose: this.handleSendDialogClose,\n      open: sendDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, pendingConfirmation ? React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"Confirm transaction\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, \"Send\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleSendDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange(\"email\"),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: amountError,\n      className: classes.textField,\n      id: \"outlined-amount\",\n      label: \"Amount in Sats\",\n      name: \"amount\",\n      helperText: amountHelperText,\n      value: amount,\n      onChange: this.handleChange(\"amount\"),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }), pendingConfirmation ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.confirmButton,\n      size: \"large\",\n      variant: \"contained\",\n      fullWidth: true,\n      onClick: this.handleConfirmTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }) : \"Confirm transaction\"), React.createElement(Button, {\n      disabled: isLoading,\n      className: classes.cancelButton,\n      size: \"large\",\n      variant: \"contained\",\n      fullWidth: true,\n      onClick: this.handleCancelTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, \"Cancel\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleSendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, \"Send email\"), React.createElement(\"div\", {\n      className: classes.textSeperator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, \"Or\"), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleDownloadGiftReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, \"Download gift receipt\")))), React.createElement(Dialog, {\n      fullWidth: true,\n      onClose: this.handleTransactionDialogClose,\n      open: transactionDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }, \"Transactions\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleTransactionDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    }))), React.createElement(ToggleButtonGroup, {\n      value: transactionListType,\n      exclusive: true,\n      onChange: this.handleTransactionSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"sent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, \"Sent\"), React.createElement(ToggleButton, {\n      value: \"received\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, \"Received\"), React.createElement(ToggleButton, {\n      value: \"deposits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, \"Deposits\")), this.getTransactions(), this.getTransactions())), React.createElement(CustomSnackbar, {\n      variant: snackbarVariant,\n      message: snackbarMessage,\n      open: snackbarIsOpen,\n      onSnackBarClose: this.onSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }));\n  }\n\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Wallet);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Dialog","IconButton","Paper","TextField","Typography","ToggleButton","ToggleButtonGroup","withStyles","palette","Chart","Deposit","Transaction","Firebase","CustomSnackbar","pdf","saveAs","Certificate","QRCode","require","store","EMAIL","GIFT","timerID","styles","address","fontSize","circularProgress","color","blue","bitcoinIcon","height","margin","opacity","width","cancelButton","background","red","confirmButton","green","container","display","flexDirection","justifyContent","flexWrap","contentContainer","alignItems","padding","dialogContent","dialogTitleContainer","fontWeight","iconButton","closeIcon","link","textDecoration","list","overflow","listEmpty","paperOptions","boxShadow","borderRadius","minHeight","minWidth","border","borderColor","gray","paperOptionsEmpty","paperChart","qrButtonContainer","maxWidth","qrButton","qrCode","textSeperator","textField","Wallet","state","balance","email","emailHelperText","emailError","amount","amountHelperText","amountError","sendDialogOpen","transactionListType","transactionDialogOpen","pendingConfirmation","isLoading","transactionType","receivedList","sentList","depositList","snackbarIsOpen","snackbarVariant","snackbarMessage","getWalletAddress","token","checkAddress","functions","httpsCallable","then","result","data","success","setState","getAllTransactions","displaySnackbar","error","bind","setOnchainTransactionService","setInterval","getOnchainTransactions","onChainTransactions","sentTransactions","getSentTransactions","receivedTransactions","getReceivedTransactions","Promise","all","responses","deposits","transfers","map","deposit","index","console","log","type","value","sentTransaction","parseInt","receivedTransaction","response","transactions","variant","message","handleCopyCode","onSnackBarClose","handleChange","name","event","preventDefault","target","handleTransactionSwitch","newTransactionListType","handleSendDialogClose","handleSendFunds","handleDownloadGiftReceipt","validateForms","handleSendEmail","handleCancelTransaction","handleViewTransactions","handleTransactionDialogClose","handleConfirmTransaction","setTimeout","downloadGift","blob","toBlob","componentDidMount","get","componentDidUnmount","clearInterval","emailHasError","emailErrorText","amountHasError","amountErrorText","test","displayFormError","getTransactions","classes","props","length","transaction","render","toString","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport bitcoinIcon from '../../images/bitcoin.svg'\nimport closeIcon from '../../images/close.svg'\nimport Chart from './Chart'\nimport Deposit from './Transactions/Deposit'\nimport Transaction from './Transactions/Transaction'\nimport Firebase from '../../constants/firebase'\nimport CustomSnackbar from '../shared/CustomSnackbar'\nimport { pdf } from \"@react-pdf/renderer\";\nimport { saveAs } from \"file-saver\";\nimport Certificate from \"./Certificate\";\n\nvar QRCode = require('qrcode.react')\nvar store = require('store')\n\nconst EMAIL = \"email\"\nconst GIFT = \"gift\"\nvar timerID = null\n\nconst styles = {\n  address: {\n    fontSize: \"13px\"\n  },\n\n  circularProgress: {\n    color: palette.blue[0]\n  },\n\n  bitcoinIcon: {\n    height: \"100px\",\n    margin: \"0 0 20px 0\",\n    opacity: 0.2,\n    width: \"100px\"\n  },\n\n  cancelButton: {\n    background: palette.red[0],\n    margin: \"25px 0 0 0\",\n\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n\n  confirmButton: {\n    background: palette.green[0],\n\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n\n    \"@media (min-width:780px)\": {\n      width: \"80%\"\n    }\n  },\n\n  contentContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"40px 20px 40px 20px\",\n\n    \"@media (min-width:780px)\": {\n      padding: \"40px 40px 40px 40px\"\n    }\n  },\n\n  dialogContent: {\n    padding: \"15px 20px 50px 20px\"\n  },\n\n  dialogTitleContainer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    fontSize: \"23px\",\n    fontWeight: 700,\n    height: \"60px\",\n    justifyContent: \"space-between\",\n    margin: \"10px 0 30px 0\",\n    padding: \"0 0 0 5px\"\n  },\n\n  iconButton: {\n    height: \"30px\",\n    width: \"30px\"\n  },\n\n  closeIcon: {\n    color: palette.blue[0],\n    margin: \"-5px -10px 0 0\"\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: \"13px\",\n    textDecoration: \"none\",\n    margin: \"5px 0 0 0\",\n\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  },\n\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"auto\",\n    height: \"340px\",\n    margin: \"20px 0 0 0\"\n  },\n\n  listEmpty: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    margin: \"20px 0 0 0\",\n    overflow: \"auto\",\n    height: \"340px\"\n  },\n\n  paperOptions: {\n    boxShadow: \"none\",\n    borderRadius: \"5px\",\n    margin: \"30px 0 0 0\",\n    minHeight: \"500px\",\n    minWidth: \"300px\",\n    width: \"100%\",\n\n    \"@media (min-width:780px)\": {\n      border: \"1px solid\",\n      borderColor: palette.gray[0],\n      margin: \"10vh 0 10vh 0\",\n      width: \"30%\"\n    }\n  },\n\n  paperOptionsEmpty: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    },\n  },\n\n  paperChart: {\n    boxShadow: \"none\",\n    borderRadius: \"5px\",\n    minHeight: \"500px\",\n    margin: \"30px 0 80px 0\",\n    width: \"100%\",\n\n    \"@media (min-width:780px)\": {\n      border: \"1px solid\",\n      borderColor: palette.gray[0],\n      margin: \"10vh 0 10vh 0\",\n      width: \"50%\"\n    },\n\n    \"@media (min-width:900px)\": {\n      width: \"55%\"\n    },\n\n    \"@media (min-width:1000px)\": {\n      width: \"60%\"\n    },\n\n    \"@media (min-width:1200px)\": {\n      width: \"65%\"\n    }\n  },\n\n  qrButtonContainer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    padding: \"40px 20px 0 20px\",\n    maxWidth: \"400px\",\n    width: \"100%\"\n  },\n\n  qrButton: {\n    height: \"50px\",\n    margin: \"0 0 15px 0\",\n    width: \"100%\"\n  },\n\n  qrCode: {\n    margin: \"60px 0 20px 0\"\n  },\n\n  textSeperator: {\n    alignItems: \"center\",\n    color: palette.blue[0],\n    display: \"flex\",\n    flexDirection: \"column\",\n    fontSize: \"18px\",\n    fontWeight: 700,\n    height: \"60px\",\n    justifyContent: \"center\"\n  },\n\n  textField: {\n    margin: \"0 0 25px 0\"\n  }\n};\n\nclass Wallet extends Component {\n  state = {\n    address: '',\n    balance: '',\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    amount: \"\",\n    amountHelperText: \"\",\n    amountError: false,\n    sendDialogOpen: false,\n    transactionListType: \"sent\",\n    transactionDialogOpen: false,\n    pendingConfirmation: false,\n    isLoading: false,\n    transactionType: EMAIL,\n    receivedList: [],\n    sentList: [],\n    depositList: [],\n    snackbarIsOpen: false,\n    snackbarVariant: \"success\",\n    snackbarMessage: \"\"\n  };\n\n  componentDidMount() {\n    if (store.get('token')) {\n      this.getWalletAddress(store.get('token'))\n    }\n  }\n\n  componentDidUnmount() {\n    if(timerID) {\n      clearInterval(timerID)\n    }\n  }\n\n  getWalletAddress = (token) => {\n    var checkAddress = Firebase.functions().httpsCallable('checkAddress')\n    checkAddress({ token: token }).then(function (result) {\n      if (result.data.success) {\n        this.setState({ address: result.data.address })\n        this.getAllTransactions(token, result.data.address)\n        //this.getOnchainTransactions(token, result.data.address)\n        //this.setOnchainTransactionService(token, result.data.address)\n      } else {\n        this.displaySnackbar('error', result.data.error)\n      }\n    }.bind(this))\n  }\n\n  setOnchainTransactionService = (token, address) => {\n    timerID = setInterval(function() {\n      this.getOnchainTransactions(token, address)\n    }.bind(this), 30000)\n  }\n\n  getAllTransactions = (token, address) => {\n    var onChainTransactions = this.getOnchainTransactions(token, address)\n    var sentTransactions = this.getSentTransactions(token)\n    var receivedTransactions = this.getReceivedTransactions(token)\n\n    Promise.all([onChainTransactions, sentTransactions, receivedTransactions]).then(responses => {\n      const deposits = responses[0].transfers\n      const sentTransactions = responses[1]\n      const receivedTransactions = responses[2]\n\n      var balance = 0\n      \n      deposits.map((deposit, index) => {\n        console.log(deposit)\n        if (deposit.state === \"confirmed\" && deposit.type ===\"receive\") {\n          balance += deposit.value\n        }\n      })\n\n      sentTransactions.map((sentTransaction, index) => {\n        console.log(sentTransaction)\n        balance -= parseInt(sentTransaction.amount)\n      })\n\n      receivedTransactions.map((receivedTransaction, index) => {\n        console.log(receivedTransaction)\n        balance -= parseInt(receivedTransaction.amount)\n      })\n\n\n\n      this.setState({balance: balance})\n    })\n  }\n\n  getOnchainTransactions = (token, address) => {\n    var getOnchainTransactions = Firebase.functions().httpsCallable('getOnchainTransactions')\n    return getOnchainTransactions({ token: token, address: address }).then(function (result) {\n      if (result.data.success) {\n        return (result.data.response)\n      } else {\n        return ([])\n      }\n    }.bind(this))\n  }\n\n  getSentTransactions = (token) => {\n    var getSentTransactions = Firebase.functions().httpsCallable('getSentTransactions')\n    return getSentTransactions({ token: token }).then(function (result) {\n      if (result.data.success) {\n        return (result.data.transactions)\n      } else {\n        return ([])\n      }\n    }.bind(this))\n  }\n\n  getReceivedTransactions = (token) => {\n    var getReceivedTransactions = Firebase.functions().httpsCallable('getReceivedTransactions')\n    return getReceivedTransactions({ token: token }).then(function (result) {\n      if (result.data.success) {\n        return (result.data.transactions)\n      } else {\n        return ([])\n      }\n    }.bind(this))\n  }\n\n  displaySnackbar = (variant, message) => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: variant,\n      snackbarMessage: message\n    })\n  }\n\n  handleCopyCode = () => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: \"success\",\n      snackbarMessage: \"Your wallet address was successfully copied.\"\n    });\n  };\n\n  onSnackBarClose = () => {\n    this.setState({\n      snackbarIsOpen: false\n    });\n  };\n\n  handleChange = name => event => {\n    event.preventDefault();\n\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: \"\",\n      emailError: false,\n      amountHelperText: \"\",\n      amountError: false\n    });\n  };\n\n  handleTransactionSwitch = (event, newTransactionListType) => {\n    this.setState({ transactionListType: newTransactionListType });\n  };\n\n  handleSendDialogClose = () => {\n    this.setState({ sendDialogOpen: false });\n  };\n\n  handleSendFunds = () => {\n    this.setState({ sendDialogOpen: true });\n  };\n\n  handleDownloadGiftReceipt = () => {\n    this.validateForms(GIFT);\n  };\n\n  handleSendEmail = () => {\n    this.validateForms(EMAIL);\n  };\n\n  handleCancelTransaction = () => {\n    this.setState({ pendingConfirmation: false });\n  };\n\n  handleViewTransactions = () => {\n    this.setState({ transactionDialogOpen: true });\n  };\n\n  handleTransactionDialogClose = () => {\n    this.setState({ transactionDialogOpen: false });\n  };\n\n  handleConfirmTransaction = () => {\n    const { transactionType } = this.state;\n\n    this.setState({ isLoading: true });\n\n    setTimeout(\n      function () {\n        // for gift\n        if (transactionType === GIFT) {\n          this.downloadGift()\n        }\n\n        this.setState({\n          sendDialogOpen: false,\n          pendingConfirmation: false,\n          isLoading: false\n        });\n\n      }.bind(this),\n      1000\n    );\n  };\n\n  // Download the gift certificate\n  downloadGift = async () => {\n    const { email, amount } = this.state;\n    const blob = await pdf(\n      <Certificate email={email} amount={amount} />\n    ).toBlob();\n    saveAs(blob, \"Certificate.pdf\");\n  };\n\n  validateForms(type) {\n    const { email, amount } = this.state;\n\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var amountHasError = false;\n    var amountErrorText = \"\";\n\n    if (amount === \"\") {\n      amountHasError = true;\n      amountErrorText = \"Please enter an amount.\";\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true;\n      amountErrorText = \"This field should only contain numbers.\";\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(\n        emailHasError,\n        emailErrorText,\n        amountHasError,\n        amountErrorText\n      );\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      });\n    }\n  }\n\n  displayFormError(\n    emailHasError,\n    emailErrorText,\n    amountHasError,\n    amountErrorText\n  ) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    });\n  }\n\n  getTransactions() {\n    const {\n      transactionListType,\n      sentList,\n      receivedList,\n      depositList\n    } = this.state;\n    const { classes } = this.props;\n\n    if (transactionListType === \"sent\") {\n      if (sentList.length === 0) {\n        return (\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No sent transactions\n          </div>\n        );\n      } else {\n        return (\n          <div className={classes.list}>\n            {\n              sentList.map((transaction, index) =>\n                <Transaction key={index} transaction={transaction} />\n              )\n            }\n          </div>\n        );\n      }\n    } else if (transactionListType === \"received\") {\n      if (receivedList.length === 0) {\n        return (\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No received transactions\n          </div>\n        );\n      } else {\n        return (\n          <div className={classes.list}>\n            {\n              receivedList.map((transaction, index) =>\n                <Transaction key={index} transaction={transaction} />\n              )\n            }\n          </div>\n        );\n      }\n    } else if (transactionListType === \"deposits\") {\n      if (depositList.length === 0) {\n        return (\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No deposits\n          </div>\n        );\n      } else {\n        return (\n          <div className={classes.list}>\n            {\n              depositList.map((deposit, index) =>\n                <Deposit key={index} deposit={deposit} />\n              )\n            }\n          </div>\n        );\n      }\n    }\n  }\n\n  render() {\n    const { address, balance, email, emailHelperText, emailError, amount, amountHelperText, amountError, sendDialogOpen, snackbarIsOpen, snackbarVariant, snackbarMessage, transactionListType, transactionDialogOpen, pendingConfirmation, isLoading } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className={classes.container}>\n        {address !== \"\" ?\n          <Paper className={classes.paperOptions}>\n            <div className={classes.contentContainer}>\n              <Typography variant=\"h4\" gutterBottom>\n               {balance.toString()} Sats\n              </Typography>\n                0 BTC - $0.00\n\n              <QRCode className={classes.qrCode} color={palette.blue[0]} size={160} value={address} />\n              <div className={classes.address}>{address}</div>\n              <a className={classes.link} href={\"#\"} onClick={this.handleCopyCode}>Copy</a>\n              <div className={classes.qrButtonContainer}>\n                <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"primary\" onClick={this.handleSendFunds}>\n                  Send\n                  </Button>\n                <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"secondary\" onClick={this.handleViewTransactions}>\n                  View transactions\n                  </Button>\n              </div>\n            </div>\n          </Paper>\n          :\n          <Paper className={classes.paperOptionsEmpty}>\n            <CircularProgress\n              className={classes.circularProgress}\n              variant=\"indeterminate\"\n              disableShrink\n              size={24}\n              thickness={4}\n            />\n          </Paper>\n        }\n\n\n        <Paper className={classes.paperChart}>\n          <Chart />\n        </Paper>\n\n        <Dialog\n          onClose={this.handleSendDialogClose}\n          open={sendDialogOpen}\n          disableBackdropClick\n        >\n          <div className={classes.dialogContent}>\n            {pendingConfirmation ? (\n              <div className={classes.dialogTitleContainer}>\n                Confirm transaction\n                <div />\n              </div>\n            ) : (\n              <div className={classes.dialogTitleContainer}>\n                Send\n                <IconButton\n                  aria-label=\"menu\"\n                  className={classes.closeIcon}\n                  onClick={this.handleSendDialogClose}\n                >\n                  <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n                </IconButton>\n              </div>\n            )}\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange(\"email\")}\n              variant=\"outlined\"\n            />\n\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={amountError}\n              className={classes.textField}\n              id=\"outlined-amount\"\n              label=\"Amount in Sats\"\n              name=\"amount\"\n              helperText={amountHelperText}\n              value={amount}\n              onChange={this.handleChange(\"amount\")}\n              variant=\"outlined\"\n            />\n\n            {pendingConfirmation ? (\n              <div>\n                <Button\n                  className={classes.confirmButton}\n                  size=\"large\"\n                  variant={\"contained\"}\n                  fullWidth\n                  onClick={this.handleConfirmTransaction}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                    \"Confirm transaction\"\n                  )}\n                </Button>\n\n                <Button\n                  disabled={isLoading}\n                  className={classes.cancelButton}\n                  size=\"large\"\n                  variant={\"contained\"}\n                  fullWidth\n                  onClick={this.handleCancelTransaction}\n                >\n                  Cancel\n                </Button>\n              </div>\n            ) : (\n              <div>\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={\"contained\"}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleSendEmail}\n                >\n                  Send email\n                </Button>\n\n                <div className={classes.textSeperator}>Or</div>\n\n                <Button\n                  className={classes.button}\n                  size=\"large\"\n                  variant={\"contained\"}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleDownloadGiftReceipt}\n                >\n                  Download gift receipt\n                </Button>\n              </div>\n            )}\n          </div>\n        </Dialog>\n\n        <Dialog\n          fullWidth\n          onClose={this.handleTransactionDialogClose}\n          open={transactionDialogOpen}\n          disableBackdropClick\n        >\n          <div className={classes.dialogContent}>\n            <div className={classes.dialogTitleContainer}>\n              Transactions\n\n              <IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleTransactionDialogClose}>\n                <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n              </IconButton>\n            </div>\n\n            <ToggleButtonGroup\n              value={transactionListType}\n              exclusive\n              onChange={this.handleTransactionSwitch}\n            >\n              <ToggleButton value=\"sent\">Sent</ToggleButton>\n              <ToggleButton value=\"received\">Received</ToggleButton>\n              <ToggleButton value=\"deposits\">Deposits</ToggleButton>\n            </ToggleButtonGroup>\n\n            {this.getTransactions()}\n\n            {this.getTransactions()}\n          </div>\n        </Dialog>\n\n        <CustomSnackbar variant={snackbarVariant} message={snackbarMessage} open={snackbarIsOpen} onSnackBarClose={this.onSnackBarClose} />\n\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Wallet);\n"]},"metadata":{},"sourceType":"module"}