{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport bitcoinIcon from \"../../images/bitcoin.svg\";\nimport closeIcon from \"../../images/close.svg\";\nimport Chart from './Chart';\nimport Deposit from './Transactions/Deposit';\nimport Transaction from './Transactions/Transaction';\nimport CustomSnackbar from '../shared/CustomSnackbar';\n\nvar QRCode = require('qrcode.react');\n\nconst EMAIL = \"email\";\nconst GIFT = \"gift\";\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n  bitcoinIcon: {\n    height: '100px',\n    margin: '0 0 20px 0',\n    opacity: 0.2,\n    width: '100px'\n  },\n  cancelButton: {\n    background: palette.red[0],\n    margin: '25px 0 0 0',\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n  confirmButton: {\n    background: palette.green[0],\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n    '@media (min-width:780px)': {\n      width: '80%'\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '340px',\n    margin: '20px 0 0 0'\n  },\n  listEmpty: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: '20px 0 0 0',\n    overflow: 'auto',\n    height: '340px'\n  },\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    }\n  },\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n    '@media (min-width:1200px)': {\n      width: '65%'\n    }\n  },\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n  textField: {\n    margin: '0 0 25px 0'\n  }\n};\n\nclass Wallet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      amount: '',\n      amountHelperText: '',\n      amountError: false,\n      sendDialogOpen: false,\n      transactionListType: 'sent',\n      transactionDialogOpen: false,\n      pendingConfirmation: false,\n      isLoading: false,\n      transactionType: EMAIL,\n      receivedList: [],\n      sentList: [],\n      depositList: [],\n      snackbarIsOpen: false,\n      snackbarVariant: 'success',\n      snackbarMessage: ''\n    };\n\n    this.handleCopyCode = () => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: 'success',\n        snackbarMessage: \"Your wallet address was successfully copied.\"\n      });\n    };\n\n    this.onSnackBarClose = () => {\n      this.setState({\n        snackbarIsOpen: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      event.preventDefault();\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false,\n        amountHelperText: '',\n        amountError: false\n      });\n    };\n\n    this.handleTransactionSwitch = (event, newTransactionListType) => {\n      this.setState({\n        transactionListType: newTransactionListType\n      });\n    };\n\n    this.handleSendDialogClose = () => {\n      this.setState({\n        sendDialogOpen: false\n      });\n    };\n\n    this.handleSendFunds = () => {\n      this.setState({\n        sendDialogOpen: true\n      });\n    };\n\n    this.handleDownloadGiftReceipt = () => {\n      this.validateForms(GIFT);\n    };\n\n    this.handleSendEmail = () => {\n      this.validateForms(EMAIL);\n    };\n\n    this.handleCancelTransaction = () => {\n      this.setState({\n        pendingConfirmation: false\n      });\n    };\n\n    this.handleViewTransactions = () => {\n      this.setState({\n        transactionDialogOpen: true\n      });\n    };\n\n    this.handleTransactionDialogClose = () => {\n      this.setState({\n        transactionDialogOpen: false\n      });\n    };\n\n    this.handleConfirmTransaction = () => {\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(function () {\n        this.setState({\n          sendDialogOpen: false,\n          email: '',\n          amount: '',\n          pendingConfirmation: false,\n          isLoading: false\n        });\n      }.bind(this), 1000);\n    };\n  }\n\n  validateForms(type) {\n    const _this$state = this.state,\n          email = _this$state.email,\n          amount = _this$state.amount;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var amountHasError = false;\n    var amountErrorText = \"\";\n\n    if (amount === \"\") {\n      amountHasError = true;\n      amountErrorText = \"Please enter an amount.\";\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true;\n      amountErrorText = \"This field should only contain numbers.\";\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText);\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      });\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    });\n  }\n\n  getTransactions() {\n    const _this$state2 = this.state,\n          transactionListType = _this$state2.transactionListType,\n          sentList = _this$state2.sentList,\n          receivedList = _this$state2.receivedList,\n          depositList = _this$state2.depositList;\n    const classes = this.props.classes;\n\n    if (transactionListType === \"sent\") {\n      if (sentList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }), \"No sent transactions\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, sentList.map((transaction, index) => React.createElement(Transaction, {\n          key: index,\n          transaction: transaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        })));\n      }\n    } else if (transactionListType === \"received\") {\n      if (receivedList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }), \"No received transactions\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, receivedList.map((transaction, index) => React.createElement(Transaction, {\n          key: index,\n          transaction: transaction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        })));\n      }\n    } else if (transactionListType === \"deposits\") {\n      if (depositList.length === 0) {\n        return React.createElement(\"div\", {\n          className: classes.listEmpty,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bitcoinIcon,\n          className: classes.bitcoinIcon,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }), \"No deposits\");\n      } else {\n        return React.createElement(\"div\", {\n          className: classes.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, depositList.map((deposit, index) => React.createElement(Deposit, {\n          key: index,\n          deposit: deposit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        })));\n      }\n    }\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          email = _this$state3.email,\n          emailHelperText = _this$state3.emailHelperText,\n          emailError = _this$state3.emailError,\n          amount = _this$state3.amount,\n          amountHelperText = _this$state3.amountHelperText,\n          amountError = _this$state3.amountError,\n          sendDialogOpen = _this$state3.sendDialogOpen,\n          snackbarIsOpen = _this$state3.snackbarIsOpen,\n          snackbarVariant = _this$state3.snackbarVariant,\n          snackbarMessage = _this$state3.snackbarMessage,\n          transactionListType = _this$state3.transactionListType,\n          transactionDialogOpen = _this$state3.transactionDialogOpen,\n          pendingConfirmation = _this$state3.pendingConfirmation,\n          isLoading = _this$state3.isLoading;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paperOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"0 Sats\"), \"0 BTC - $0.00\", React.createElement(QRCode, {\n      className: classes.qrCode,\n      color: palette.blue[0],\n      size: 160,\n      value: \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.handleCopyCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"Copy\"), React.createElement(\"div\", {\n      className: classes.qrButtonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"primary\",\n      onClick: this.handleSendFunds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Send\"), React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"secondary\",\n      onClick: this.handleViewTransactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"View transactions\")))), React.createElement(Paper, {\n      className: classes.paperChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      onClose: this.handleSendDialogClose,\n      open: sendDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, pendingConfirmation ? React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Confirm transaction\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Send\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleSendDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: amountError,\n      className: classes.textField,\n      id: \"outlined-amount\",\n      label: \"Amount in Sats\",\n      name: \"amount\",\n      helperText: amountHelperText,\n      value: amount,\n      onChange: this.handleChange('amount'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), pendingConfirmation ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.confirmButton,\n      size: \"large\",\n      variant: 'contained',\n      fullWidth: true,\n      onClick: this.handleConfirmTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }) : 'Confirm transaction'), React.createElement(Button, {\n      disabled: isLoading,\n      className: classes.cancelButton,\n      size: \"large\",\n      variant: 'contained',\n      fullWidth: true,\n      onClick: this.handleCancelTransaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"Cancel\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleSendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"Send email\"), React.createElement(\"div\", {\n      className: classes.textSeperator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"Or\"), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleDownloadGiftReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"Download gift receipt\")))), React.createElement(Dialog, {\n      fullWidth: true,\n      onClose: this.handleTransactionDialogClose,\n      open: transactionDialogOpen,\n      disableBackdropClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"Transactions\", React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleTransactionDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }))), React.createElement(ToggleButtonGroup, {\n      value: transactionListType,\n      exclusive: true,\n      onChange: this.handleTransactionSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"sent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"Sent\"), React.createElement(ToggleButton, {\n      value: \"received\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, \"Received\"), React.createElement(ToggleButton, {\n      value: \"deposits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"Deposits\")), this.getTransactions())), React.createElement(CustomSnackbar, {\n      variant: snackbarVariant,\n      message: snackbarMessage,\n      open: snackbarIsOpen,\n      onSnackBarClose: this.onSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }));\n  }\n\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Wallet);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Dialog","IconButton","Paper","TextField","Typography","ToggleButton","ToggleButtonGroup","withStyles","palette","Chart","Deposit","Transaction","CustomSnackbar","QRCode","require","EMAIL","GIFT","styles","address","fontSize","bitcoinIcon","height","margin","opacity","width","cancelButton","background","red","confirmButton","green","container","display","flexDirection","justifyContent","flexWrap","contentContainer","alignItems","padding","dialogContent","dialogTitleContainer","fontWeight","iconButton","closeIcon","color","blue","link","textDecoration","list","overflow","listEmpty","paperOptions","boxShadow","borderRadius","minHeight","minWidth","border","borderColor","gray","paperChart","qrButtonContainer","maxWidth","qrButton","qrCode","textSeperator","textField","Wallet","state","email","emailHelperText","emailError","amount","amountHelperText","amountError","sendDialogOpen","transactionListType","transactionDialogOpen","pendingConfirmation","isLoading","transactionType","receivedList","sentList","depositList","snackbarIsOpen","snackbarVariant","snackbarMessage","handleCopyCode","setState","onSnackBarClose","handleChange","name","event","preventDefault","target","value","handleTransactionSwitch","newTransactionListType","handleSendDialogClose","handleSendFunds","handleDownloadGiftReceipt","validateForms","handleSendEmail","handleCancelTransaction","handleViewTransactions","handleTransactionDialogClose","handleConfirmTransaction","setTimeout","bind","type","emailHasError","emailErrorText","amountHasError","amountErrorText","test","displayFormError","getTransactions","classes","props","length","map","transaction","index","deposit","render","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport bitcoinIcon from '../../images/bitcoin.svg'\nimport closeIcon from '../../images/close.svg'\nimport Chart from './Chart'\nimport Deposit from './Transactions/Deposit'\nimport Transaction from './Transactions/Transaction'\nimport CustomSnackbar from '../shared/CustomSnackbar'\n\nvar QRCode = require('qrcode.react')\n\nconst EMAIL = \"email\"\nconst GIFT = \"gift\"\n\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n\n  bitcoinIcon: {\n    height: '100px',\n    margin: '0 0 20px 0',\n    opacity: 0.2,\n    width: '100px'\n  },\n\n  cancelButton: {\n    background: palette.red[0],\n    margin: '25px 0 0 0',\n\n    \"&:hover\": {\n      background: palette.red[-1]\n    }\n  },\n\n  confirmButton: {\n    background: palette.green[0],\n\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      width: '80%',\n    },\n  },\n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0',\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '340px',\n    margin: '20px 0 0 0'\n  },\n\n  listEmpty: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    margin: '20px 0 0 0',\n    overflow: 'auto',\n    height: '340px'\n  },\n\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    },\n  },\n\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n\n    '@media (min-width:1200px)': {\n      width: '65%'\n    },\n  },\n\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n\n  textField: {\n    margin: '0 0 25px 0'\n  }\n}\n\nclass Wallet extends Component {\n  state = {\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    amount: '',\n    amountHelperText: '',\n    amountError: false,\n    sendDialogOpen: false,\n    transactionListType: 'sent',\n    transactionDialogOpen: false,\n    pendingConfirmation: false,\n    isLoading: false,\n    transactionType: EMAIL,\n    receivedList: [],\n    sentList: [],\n    depositList: [],\n    snackbarIsOpen: false,\n    snackbarVariant: 'success',\n    snackbarMessage: ''\n  }\n\n  handleCopyCode = () => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: 'success',\n      snackbarMessage: \"Your wallet address was successfully copied.\"\n    })\n  }\n\n  onSnackBarClose = () => {\n    this.setState({\n      snackbarIsOpen: false,\n    })\n  }\n\n  handleChange = name => event => {\n    event.preventDefault()\n\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false,\n      amountHelperText: '',\n      amountError: false\n    })\n  }\n\n  handleTransactionSwitch = (event, newTransactionListType) => {\n    this.setState({ transactionListType: newTransactionListType })\n  }\n\n  handleSendDialogClose = () => {\n    this.setState({ sendDialogOpen: false })\n  }\n\n  handleSendFunds = () => {\n    this.setState({ sendDialogOpen: true })\n  }\n\n  handleDownloadGiftReceipt = () => {\n    this.validateForms(GIFT)\n  }\n\n  handleSendEmail = () => {\n    this.validateForms(EMAIL)\n  }\n\n  handleCancelTransaction = () => {\n    this.setState({ pendingConfirmation: false })\n  }\n\n  handleViewTransactions = () => {\n    this.setState({ transactionDialogOpen: true })\n  }\n\n  handleTransactionDialogClose = () => {\n    this.setState({ transactionDialogOpen: false })\n  }\n\n  handleConfirmTransaction = () => {\n    this.setState({ isLoading: true })\n\n    setTimeout(\n      function () {\n        this.setState({\n          sendDialogOpen: false,\n          email: '',\n          amount: '',\n          pendingConfirmation: false,\n          isLoading: false\n        })\n      }.bind(this),\n      1000,\n    )\n  }\n\n  validateForms(type) {\n    const { email, amount } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n\n    if (email === \"\") {\n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    var amountHasError = false\n    var amountErrorText = \"\"\n\n    if (amount === \"\") {\n      amountHasError = true\n      amountErrorText = \"Please enter an amount.\"\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true\n      amountErrorText = \"This field should only contain numbers.\"\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText)\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      })\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    })\n  }\n\n  getTransactions() {\n    const { transactionListType, sentList, receivedList, depositList } = this.state\n    const { classes } = this.props\n\n    if (transactionListType === \"sent\") {\n      if (sentList.length === 0) {\n        return(\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No sent transactions\n          </div>\n        )\n      } else {\n        return(\n          <div className={classes.list}>\n            {\n              sentList.map((transaction, index) => \n                <Transaction key={index} transaction={transaction}/>\n              )\n            }\n          </div>\n        )\n      }\n    } else if (transactionListType === \"received\") {\n\n      if (receivedList.length === 0) {\n        return(\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No received transactions\n          </div>\n        )\n      } else {\n        return(\n          <div className={classes.list}>\n            {\n              receivedList.map((transaction, index) => \n                <Transaction key={index} transaction={transaction}/>\n              )\n            }\n          </div>\n        )\n      }\n    } else if (transactionListType === \"deposits\") {\n      if (depositList.length === 0) {\n        return(\n          <div className={classes.listEmpty}>\n            <img src={bitcoinIcon} className={classes.bitcoinIcon} alt=\"\" />\n            No deposits\n          </div>\n        )\n      } else {\n        return(\n          <div className={classes.list}>\n            {\n              depositList.map((deposit, index) => \n                <Deposit key={index} deposit={deposit}/>\n              )\n            }\n          </div>\n        )\n      }\n    }\n  }\n\n  render() {\n    const { email, emailHelperText, emailError, amount, amountHelperText, amountError, sendDialogOpen, snackbarIsOpen, snackbarVariant, snackbarMessage, transactionListType, transactionDialogOpen, pendingConfirmation, isLoading } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paperOptions}>\n          <div className={classes.contentContainer}>\n            <Typography variant=\"h4\" gutterBottom>\n              0 Sats\n            </Typography>\n              0 BTC - $0.00\n\n            <QRCode className={classes.qrCode} color={palette.blue[0]} size={160} value=\"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\" />\n            <div className={classes.address}>1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9</div>\n            <a className={classes.link} href={\"#\"} onClick={this.handleCopyCode}>Copy</a>\n            <div className={classes.qrButtonContainer}>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"primary\" onClick={this.handleSendFunds}>\n                Send\n                </Button>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"secondary\" onClick={this.handleViewTransactions}>\n                View transactions\n                </Button>\n            </div>\n          </div>\n        </Paper>\n\n        <Paper className={classes.paperChart}>\n          <Chart />\n        </Paper>\n\n        <Dialog onClose={this.handleSendDialogClose} open={sendDialogOpen} disableBackdropClick>\n          <div className={classes.dialogContent}>\n\n            {pendingConfirmation ?\n              <div className={classes.dialogTitleContainer}>\n                Confirm transaction\n                  <div />\n              </div>\n              :\n              <div className={classes.dialogTitleContainer}>\n                Send\n\n                <IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleSendDialogClose}>\n                  <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n                </IconButton >\n              </div>\n            }\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange('email')}\n              variant=\"outlined\"\n            />\n\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={amountError}\n              className={classes.textField}\n              id=\"outlined-amount\"\n              label=\"Amount in Sats\"\n              name=\"amount\"\n              helperText={amountHelperText}\n              value={amount}\n              onChange={this.handleChange('amount')}\n              variant=\"outlined\"\n            />\n\n            {\n              pendingConfirmation ?\n\n                <div>\n                  <Button\n                    className={classes.confirmButton}\n                    size=\"large\"\n                    variant={'contained'}\n                    fullWidth\n                    onClick={this.handleConfirmTransaction}\n                  >\n                    {isLoading ? (\n                      <CircularProgress\n                        variant=\"indeterminate\"\n                        disableShrink\n                        size={24}\n                        thickness={4}\n                      />\n                    ) : (\n                        'Confirm transaction'\n                      )}\n                  </Button>\n\n                  <Button\n                    disabled={isLoading}\n                    className={classes.cancelButton}\n                    size=\"large\"\n                    variant={'contained'}\n                    fullWidth\n                    onClick={this.handleCancelTransaction}\n                  >\n                    Cancel\n                </Button>\n                </div>\n\n                :\n\n                <div>\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleSendEmail}\n                  >\n                    Send email\n                </Button>\n\n                  <div className={classes.textSeperator}>\n                    Or\n                </div>\n\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleDownloadGiftReceipt}\n                  >\n                    Download gift receipt\n                </Button>\n                </div>\n            }\n          </div>\n        </Dialog>\n\n        <Dialog fullWidth onClose={this.handleTransactionDialogClose} open={transactionDialogOpen} disableBackdropClick>\n          <div className={classes.dialogContent}>\n            <div className={classes.dialogTitleContainer}>\n              Transactions\n              \n              <IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleTransactionDialogClose}>\n                <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n              </IconButton >\n            </div>\n\n            <ToggleButtonGroup\n              value={transactionListType}\n              exclusive\n              onChange={this.handleTransactionSwitch}\n            >\n              <ToggleButton value=\"sent\">\n                Sent\n              </ToggleButton>\n              <ToggleButton value=\"received\">\n                Received\n              </ToggleButton>\n              <ToggleButton value=\"deposits\">\n                Deposits\n              </ToggleButton>\n            </ToggleButtonGroup>\n            \n            { this.getTransactions() }\n\n          </div>\n        </Dialog>\n\n        <CustomSnackbar variant={snackbarVariant} message={snackbarMessage} open={snackbarIsOpen} onSnackBarClose={this.onSnackBarClose}/>\n\n      </div>\n    )\n  }\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Wallet)"]},"metadata":{},"sourceType":"module"}