{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport logoIcon from '../../images/logo.png';\nimport Footer from './Footer';\nimport Firebase from '../../constants/firebase';\nimport CustomSnackbar from '../shared/CustomSnackbar';\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    }\n  },\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n  textField: {\n    marginTop: '25px'\n  }\n};\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      snackbarIsOpen: false,\n      snackbarVariant: 'success',\n      snackbarMessage: ''\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false\n      });\n    };\n\n    this.onSnackBarClose = () => {\n      this.setState({\n        snackbarIsOpen: false\n      });\n    };\n\n    this.displaySnackbar = (variant, message) => {\n      this.setState({\n        snackbarIsOpen: true,\n        snackbarVariant: variant,\n        snackbarMessage: message\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.validateForms();\n    };\n  }\n\n  validateForms() {\n    const email = this.state.email;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter the email you used to create your account.\";\n    }\n\n    if (emailHasError) {\n      this.displayFormError(emailHasError, emailErrorText);\n    } else {\n      this.recoverPassword();\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText\n    });\n  }\n\n  recoverPassword() {\n    const email = this.state.email;\n    this.setState({\n      isLoading: true\n    });\n    var generateResetPassword = Firebase.functions().httpsCallable('generateResetPassword');\n    generateResetPassword({\n      email: email\n    }).then(function (result) {\n      if (result.data.success) {\n        this.displaySnackbar('success', \"An email to reset your password has been successfully sent.\");\n      } else {\n        this.displaySnackbar('error', result.data.error);\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    }.bind(this));\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          email = _this$state.email,\n          emailHelperText = _this$state.emailHelperText,\n          emailError = _this$state.emailError,\n          isLoading = _this$state.isLoading,\n          snackbarIsOpen = _this$state.snackbarIsOpen,\n          snackbarMessage = _this$state.snackbarMessage,\n          snackbarVariant = _this$state.snackbarVariant;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Account recovery\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }) : 'Send recovery email'), React.createElement(\"div\", {\n      className: classes.linkContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"/create_account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Create an account\")))), React.createElement(\"div\", {\n      className: classes.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(CustomSnackbar, {\n      variant: snackbarVariant,\n      message: snackbarMessage,\n      open: snackbarIsOpen,\n      onSnackBarClose: this.onSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }));\n  }\n\n}\n\nForgotPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ForgotPassword);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/ForgotPassword.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Paper","Typography","TextField","withStyles","palette","logoIcon","Footer","Firebase","CustomSnackbar","styles","button","margin","container","display","justifyContent","contentContainer","flexDirection","alignItems","padding","footer","width","paper","position","boxShadow","borderRadius","top","border","borderColor","gray","linkContainer","link","color","blue","fontWeight","fontSize","textDecoration","marginBottom","objectFit","height","textField","marginTop","ForgotPassword","state","email","emailHelperText","emailError","snackbarIsOpen","snackbarVariant","snackbarMessage","handleChange","name","event","setState","target","value","onSnackBarClose","displaySnackbar","variant","message","handleOnClick","validateForms","emailHasError","emailErrorText","displayFormError","recoverPassword","isLoading","generateResetPassword","functions","httpsCallable","then","result","data","success","error","bind","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport logoIcon from '../../images/logo.png'\nimport Footer from './Footer'\nimport Firebase from '../../constants/firebase'\nimport CustomSnackbar from '../shared/CustomSnackbar'\n\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  }, \n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    },\n  },\n\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n\n  textField: {\n    marginTop: '25px'\n  }\n}\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    snackbarIsOpen: false,\n    snackbarVariant: 'success',\n    snackbarMessage: ''\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false\n    })\n  }\n\n  onSnackBarClose = () => {\n    this.setState({\n      snackbarIsOpen: false\n    })\n  }\n\n  displaySnackbar = (variant, message) => {\n    this.setState({\n      snackbarIsOpen: true,\n      snackbarVariant: variant,\n      snackbarMessage: message\n    })\n  }\n\n  handleOnClick = event => {\n    this.validateForms()\n  }\n\n  validateForms() { \n    const { email } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n    \n    if (email === \"\") { \n      emailHasError = true\n      emailErrorText = \"Please enter the email you used to create your account.\"\n    }\n\n    if (emailHasError) {\n      this.displayFormError(emailHasError, emailErrorText)\n    } else {\n      this.recoverPassword()\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText) { \n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText\n    })\n  }\n  \n  recoverPassword() { \n    const { email } = this.state\n\n    this.setState({ isLoading: true })\n\n    var generateResetPassword = Firebase.functions().httpsCallable('generateResetPassword')\n    generateResetPassword({ email: email }).then(function (result) {\n      if (result.data.success) {\n        this.displaySnackbar('success', \"An email to reset your password has been successfully sent.\")\n      } else {\n        this.displaySnackbar('error', result.data.error)\n      }\n      this.setState({ isLoading: false })\n    }.bind(this))\n  }\n\n  render() {\n    const { classes } = this.props\n    const { email, emailHelperText, emailError, isLoading, snackbarIsOpen, snackbarMessage, snackbarVariant } = this.state\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n          <div className={classes.contentContainer}>\n            <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n\n            <Typography variant=\"h4\" gutterBottom>\n              Account recovery\n            </Typography>\n\n            <TextField\n              fullWidth\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange('email')}\n              variant=\"outlined\"\n            />\n\n            <Button\n              className={classes.button}\n              size=\"large\"\n              variant={'contained'}\n              color=\"primary\"\n              fullWidth\n              onClick={this.handleOnClick}\n            >\n            {isLoading ? (\n                <CircularProgress\n                  variant=\"indeterminate\"\n                  disableShrink\n                  size={24}\n                  thickness={4}\n                />\n              ) : (\n                'Send recovery email'\n              )}\n            </Button>\n\n            <div className={classes.linkContainer}>\n              <a className={classes.link} href={\"/signin\"}>Sign in</a>\n              <a className={classes.link} href={\"/create_account\"}>Create an account</a>\n            </div>\n\n          </div>\n        </Paper>\n        <div className={classes.footer}>\n          <Footer />\n        </div>\n        \n        <CustomSnackbar variant={snackbarVariant} message={snackbarMessage} open={snackbarIsOpen} onSnackBarClose={this.onSnackBarClose}/>\n      \n      </div>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}