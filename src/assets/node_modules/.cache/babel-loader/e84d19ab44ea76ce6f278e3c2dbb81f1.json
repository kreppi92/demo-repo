{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport logoIcon from '../../images/logo.png';\nimport Footer from './Footer';\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    }\n  },\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n  textField: {\n    marginTop: '25px'\n  }\n};\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: '',\n      passwordHelperText: '',\n      passwordError: false,\n      password2: '',\n      password2HelperText: '',\n      password2Error: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        passwordHelperText: '',\n        passwordError: false,\n        password2HelperText: '',\n        password2Error: false\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.validateForms();\n    };\n  }\n\n  validateForms() {\n    const _this$state = this.state,\n          password = _this$state.password,\n          password2 = _this$state.password2;\n    var passwordHasError = false;\n    var passwordErrorText = \"\";\n\n    if (password === \"\") {\n      passwordHasError = true;\n      passwordErrorText = \"Please enter a password.\";\n    }\n\n    var password2HasError = false;\n    var password2ErrorText = \"\";\n\n    if (password2 === \"\") {\n      password2HasError = true;\n      password2ErrorText = \"Please confirm your password.\";\n    }\n\n    if (passwordHasError || password2HasError) {\n      this.displayFormError(passwordHasError, passwordErrorText, password2HasError, password2ErrorText);\n    } else {\n      this.resetPassword();\n    }\n  }\n\n  displayFormError(passwordHasError, passwordErrorText, password2HasError, password2ErrorText) {\n    this.setState({\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText,\n      password2Error: password2HasError,\n      password2HelperText: password2ErrorText\n    });\n  }\n\n  resetPassword() {\n    this.setState({\n      isLoading: true\n    });\n    setTimeout(function () {//this.props.completedSignIn()\n    }.bind(this), 1000);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          password = _this$state2.password,\n          passwordHelperText = _this$state2.passwordHelperText,\n          passwordError = _this$state2.passwordError,\n          password2 = _this$state2.password2,\n          password2HelperText = _this$state2.password2HelperText,\n          password2Error = _this$state2.password2Error,\n          isLoading = _this$state2.isLoading;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Enter your new password\"), React.createElement(TextField, {\n      onKeyPress: this.onKeyPress,\n      fullWidth: true,\n      error: passwordError,\n      className: classes.textField,\n      id: \"outlined-password\",\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      helperText: passwordHelperText,\n      onChange: this.handleChange('password'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onKeyPress: this.onKeyPress,\n      fullWidth: true,\n      error: password2Error,\n      className: classes.textField,\n      id: \"outlined-password2\",\n      label: \"Confirm Password\",\n      name: \"password2\",\n      type: \"password\",\n      value: password2,\n      helperText: password2HelperText,\n      onChange: this.handleChange('password2'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : 'Reset password'))), React.createElement(\"div\", {\n      className: classes.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })));\n  }\n\n}\n\nResetPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ResetPassword);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/ResetPassword.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Paper","Typography","TextField","withStyles","palette","logoIcon","Footer","styles","button","margin","container","display","justifyContent","contentContainer","flexDirection","alignItems","padding","footer","width","paper","position","boxShadow","borderRadius","top","border","borderColor","gray","linkContainer","link","color","blue","fontWeight","fontSize","textDecoration","marginBottom","objectFit","height","textField","marginTop","ResetPassword","state","password","passwordHelperText","passwordError","password2","password2HelperText","password2Error","handleChange","name","event","setState","target","value","handleOnClick","validateForms","passwordHasError","passwordErrorText","password2HasError","password2ErrorText","displayFormError","resetPassword","isLoading","setTimeout","bind","render","classes","props","onKeyPress","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport logoIcon from '../../images/logo.png'\nimport Footer from './Footer'\n\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  }, \n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  footer: {\n    margin: '95vh 0 0 0',\n    width: '100%'\n  },\n\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    },\n  },\n\n  linkContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: '25px 0 30px 0',\n    width: '100%'\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '15px',\n    textDecoration: 'none',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n\n  textField: {\n    marginTop: '25px'\n  }\n}\n\nclass ResetPassword extends Component {\n  state = {\n    password: '',\n    passwordHelperText: '',\n    passwordError: false,\n    password2: '',\n    password2HelperText: '',\n    password2Error: false,\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      passwordHelperText: '',\n      passwordError: false,\n      password2HelperText: '',\n      password2Error: false\n    })\n  }\n\n  handleOnClick = event => {\n    this.validateForms()\n  }\n\n  validateForms() { \n    const { password, password2 } = this.state\n\n    var passwordHasError = false\n    var passwordErrorText = \"\"\n\n    if (password === \"\") { \n      passwordHasError = true\n      passwordErrorText = \"Please enter a password.\"\n    }\n\n    var password2HasError = false\n    var password2ErrorText = \"\"\n\n    if (password2 === \"\") { \n      password2HasError = true\n      password2ErrorText = \"Please confirm your password.\"\n    }\n\n    if (passwordHasError || password2HasError) {\n      this.displayFormError(passwordHasError, passwordErrorText, password2HasError, password2ErrorText)\n    } else {\n      this.resetPassword()\n    }\n  }\n\n  displayFormError(passwordHasError, passwordErrorText, password2HasError, password2ErrorText) { \n    this.setState({\n      passwordError: passwordHasError,\n      passwordHelperText: passwordErrorText,\n      password2Error: password2HasError,\n      password2HelperText: password2ErrorText\n    })\n  }\n\n  resetPassword() { \n    this.setState({ isLoading: true })\n\n    setTimeout(\n      function() {\n        //this.props.completedSignIn()\n      }.bind(this),\n      1000,\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n    const { password, passwordHelperText, passwordError, password2, password2HelperText, password2Error, isLoading } = this.state\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n          <div className={classes.contentContainer}>\n            <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n\n            <Typography variant=\"h4\" gutterBottom>\n              Enter your new password\n            </Typography>\n\n            <TextField\n              onKeyPress={this.onKeyPress}\n              fullWidth\n              error={passwordError}\n              className={classes.textField}\n              id=\"outlined-password\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              helperText={passwordHelperText}\n              onChange={this.handleChange('password')}\n              variant=\"outlined\"\n            />\n\n            <TextField\n              onKeyPress={this.onKeyPress}\n              fullWidth\n              error={password2Error}\n              className={classes.textField}\n              id=\"outlined-password2\"\n              label=\"Confirm Password\"\n              name=\"password2\"\n              type=\"password\"\n              value={password2}\n              helperText={password2HelperText}\n              onChange={this.handleChange('password2')}\n              variant=\"outlined\"\n            />\n\n            <Button\n              className={classes.button}\n              size=\"large\"\n              variant={'contained'}\n              color=\"primary\"\n              fullWidth\n              onClick={this.handleOnClick}\n            >\n            {isLoading ? (\n                <CircularProgress\n                  variant=\"indeterminate\"\n                  disableShrink\n                  size={24}\n                  thickness={4}\n                />\n              ) : (\n                'Reset password'\n              )}\n            </Button>\n          </div>\n        </Paper>\n        <div className={classes.footer}>\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nResetPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ResetPassword)"]},"metadata":{},"sourceType":"module"}