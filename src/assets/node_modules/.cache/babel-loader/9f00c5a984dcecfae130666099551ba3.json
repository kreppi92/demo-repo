{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { palette } from '../../constants/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chart from './Chart';\nimport closeIcon from \"../../images/close.svg\";\n\nvar QRCode = require('qrcode.react');\n\nconst EMAIL = \"email\";\nconst GIFT = \"gift\";\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n  confirmButton: {\n    background: palette.green[0],\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n    '@media (min-width:780px)': {\n      width: '80%'\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0'\n  },\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    }\n  },\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n    '@media (min-width:1200px)': {\n      width: '65%'\n    }\n  },\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n  textField: {\n    margin: '0 0 25px 0'\n  }\n};\n\nclass Wallet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      emailHelperText: '',\n      emailError: false,\n      amount: '',\n      amountHelperText: '',\n      amountError: false,\n      sendDialogOpen: false,\n      pendingConfirmation: false,\n      isLoading: false,\n      transactionType: EMAIL\n    };\n\n    this.handleChange = name => event => {\n      event.preventDefault();\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false,\n        amountHelperText: '',\n        amountError: false\n      });\n    };\n\n    this.handleSendDialogClose = () => {\n      this.setState({\n        sendDialogOpen: false\n      });\n    };\n\n    this.handleSendFunds = () => {\n      this.setState({\n        sendDialogOpen: true\n      });\n    };\n\n    this.handleDownloadGiftReceipt = () => {\n      this.validateForms(GIFT);\n    };\n\n    this.handleSendEmail = () => {\n      this.validateForms(EMAIL);\n    };\n  }\n\n  validateForms(type) {\n    const _this$state = this.state,\n          email = _this$state.email,\n          amount = _this$state.amount;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    var amountHasError = false;\n    var amountErrorText = \"\";\n\n    if (amount === \"\") {\n      amountHasError = true;\n      amountErrorText = \"Please enter an amount.\";\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true;\n      amountErrorText = \"This field should only contain numbers.\";\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText);\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      });\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          emailHelperText = _this$state2.emailHelperText,\n          emailError = _this$state2.emailError,\n          amount = _this$state2.amount,\n          amountHelperText = _this$state2.amountHelperText,\n          amountError = _this$state2.amountError,\n          sendDialogOpen = _this$state2.sendDialogOpen,\n          pendingConfirmation = _this$state2.pendingConfirmation,\n          isLoading = _this$state2.isLoading;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paperOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"0 Sats\"), \"0 BTC - $0.00\", React.createElement(QRCode, {\n      className: classes.qrCode,\n      color: palette.blue[0],\n      size: 160,\n      value: \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\"), React.createElement(\"a\", {\n      className: classes.link,\n      href: \"#\",\n      onClick: this.sendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Copy\"), React.createElement(\"div\", {\n      className: classes.qrButtonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"primary\",\n      onClick: this.handleSendFunds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Send\"), React.createElement(Button, {\n      className: classes.qrButton,\n      size: \"small\",\n      variant: 'contained',\n      color: \"secondary\",\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"View transactions\")))), React.createElement(Paper, {\n      className: classes.paperChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      onClose: this.handleSendDialogClose,\n      open: sendDialogOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.dialogTitleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, pendingConfirmation ? 'Confirm transaction' : 'Send', React.createElement(IconButton, {\n      \"aria-label\": \"menu\",\n      className: classes.closeIcon,\n      onClick: this.handleSendDialogClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: closeIcon,\n      className: classes.iconButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      fullWidth: true,\n      disabled: pendingConfirmation,\n      error: amountError,\n      className: classes.textField,\n      id: \"outlined-amount\",\n      label: \"Amount in Sats\",\n      name: \"amount\",\n      helperText: amountHelperText,\n      value: amount,\n      onChange: this.handleChange('amount'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), pendingConfirmation ? React.createElement(Button, {\n      className: classes.confirmButton,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }) : 'Confirm transaction') : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleSendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Send email\"), React.createElement(\"div\", {\n      className: classes.textSeperator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Or\"), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleDownloadGiftReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Download gift receipt\")))));\n  }\n\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Wallet);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/Wallet.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Dialog","IconButton","Paper","TextField","Typography","palette","withStyles","Chart","QRCode","require","EMAIL","GIFT","styles","address","fontSize","confirmButton","background","green","container","display","flexDirection","justifyContent","flexWrap","width","contentContainer","alignItems","padding","dialogContent","dialogTitleContainer","fontWeight","height","margin","iconButton","closeIcon","color","blue","link","textDecoration","paperOptions","boxShadow","borderRadius","minHeight","minWidth","border","borderColor","gray","paperChart","qrButtonContainer","maxWidth","qrButton","qrCode","textSeperator","textField","Wallet","state","email","emailHelperText","emailError","amount","amountHelperText","amountError","sendDialogOpen","pendingConfirmation","isLoading","transactionType","handleChange","name","event","preventDefault","setState","target","value","handleSendDialogClose","handleSendFunds","handleDownloadGiftReceipt","validateForms","handleSendEmail","type","emailHasError","emailErrorText","amountHasError","amountErrorText","test","displayFormError","render","classes","props","sendEmail","handleOnClick","button","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { palette } from '../../constants/styles'\nimport { withStyles } from '@material-ui/core/styles'\nimport Chart from './Chart'\nimport closeIcon from '../../images/close.svg'\n\nvar QRCode = require('qrcode.react')\n\nconst EMAIL = \"email\"\nconst GIFT = \"gift\"\n\nconst styles = {\n  address: {\n    fontSize: '13px'\n  },\n\n  confirmButton: {\n    background: palette.green[0],\n\n    \"&:hover\": {\n      background: palette.green[-1]\n    }\n  },\n\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      width: '80%',\n    },\n  },\n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  dialogContent: {\n    padding: '15px 20px 50px 20px'\n  },\n\n  dialogTitleContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: '23px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'space-between',\n    margin: '10px 0 30px 0',\n    padding: '0 0 0 5px'\n  },\n\n  iconButton: {\n    height: '30px',\n    width: '30px'\n  },\n\n  closeIcon: {\n    color: palette.blue[0],\n    margin: '-5px -10px 0 0',\n  },\n\n  link: {\n    color: palette.blue[0],\n    fontWeight: 700,\n    fontSize: '13px',\n    textDecoration: 'none',\n    margin: '5px 0 0 0',\n\n    \"&:hover\": {\n      textDecoration: 'underline'\n    }\n  },\n\n  paperOptions: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    margin: '30px 0 0 0',\n    minHeight: '500px',\n    minWidth: '300px',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '30%'\n    },\n  },\n\n  paperChart: {\n    boxShadow: 'none',\n    borderRadius: '5px',\n    minHeight: '500px',\n    margin: '30px 0 80px 0',\n    width: '100%',\n\n    '@media (min-width:780px)': {\n      border: '1px solid',\n      borderColor: palette.gray[0],\n      margin: '10vh 0 10vh 0',\n      width: '50%'\n    },\n\n    '@media (min-width:900px)': {\n      width: '55%'\n    },\n\n    '@media (min-width:1000px)': {\n      width: '60%'\n    },\n\n    '@media (min-width:1200px)': {\n      width: '65%'\n    },\n  },\n\n  qrButtonContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '40px 20px 0 20px',\n    maxWidth: '400px',\n    width: '100%'\n  },\n\n  qrButton: {\n    height: '50px',\n    margin: '0 0 15px 0',\n    width: '100%'\n  },\n\n  qrCode: {\n    margin: '60px 0 20px 0'\n  },\n\n  textSeperator: {\n    alignItems: 'center',\n    color: palette.blue[0],\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: '18px',\n    fontWeight: 700,\n    height: '60px',\n    justifyContent: 'center'\n  },\n\n  textField: {\n    margin: '0 0 25px 0'\n  }\n}\n\nclass Wallet extends Component {\n  state = {\n    email: '',\n    emailHelperText: '',\n    emailError: false,\n    amount: '',\n    amountHelperText: '',\n    amountError: false,\n    sendDialogOpen: false,\n    pendingConfirmation: false,\n    isLoading: false,\n    transactionType: EMAIL\n  }\n\n  handleChange = name => event => {\n    event.preventDefault()\n\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false,\n      amountHelperText: '',\n      amountError: false\n    })\n  }\n\n  handleSendDialogClose = () => {\n    this.setState({ sendDialogOpen: false })\n  }\n\n  handleSendFunds = () => {\n    this.setState({ sendDialogOpen: true })\n  }\n\n  handleDownloadGiftReceipt = () => {\n    this.validateForms(GIFT)\n  }\n\n  handleSendEmail = () => {\n    this.validateForms(EMAIL)\n  }\n\n  validateForms(type) {\n    const { email, amount } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n\n    if (email === \"\") {\n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    var amountHasError = false\n    var amountErrorText = \"\"\n\n    if (amount === \"\") {\n      amountHasError = true\n      amountErrorText = \"Please enter an amount.\"\n    } else if (!/^\\d+$/.test(amount)) {\n      amountHasError = true\n      amountErrorText = \"This field should only contain numbers.\"\n    }\n\n    if (emailHasError || amountHasError) {\n      this.displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText)\n    } else {\n      this.setState({\n        transactionType: type,\n        pendingConfirmation: true\n      })\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText, amountHasError, amountErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText,\n      amountError: amountHasError,\n      amountHelperText: amountErrorText\n    })\n  }\n\n  render() {\n    const { email, emailHelperText, emailError, amount, amountHelperText, amountError, sendDialogOpen, pendingConfirmation, isLoading } = this.state\n    const { classes } = this.props\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paperOptions}>\n          <div className={classes.contentContainer}>\n            <Typography variant=\"h4\" gutterBottom>\n              0 Sats\n            </Typography>\n            0 BTC - $0.00\n\n            <QRCode className={classes.qrCode} color={palette.blue[0]} size={160} value=\"1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9\" />\n            <div className={classes.address}>1P4enaLERffNRpWcHqn5onmYDYZu4hr4p9</div>\n            <a className={classes.link} href={\"#\"} onClick={this.sendEmail}>Copy</a>\n            <div className={classes.qrButtonContainer}>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"primary\" onClick={this.handleSendFunds}>\n                Send\n                </Button>\n              <Button className={classes.qrButton} size=\"small\" variant={'contained'} color=\"secondary\" onClick={this.handleOnClick}>\n                View transactions\n                </Button>\n            </div>\n          </div>\n        </Paper>\n\n        <Paper className={classes.paperChart}>\n          <Chart />\n        </Paper>\n\n        <Dialog onClose={this.handleSendDialogClose} open={sendDialogOpen}>\n          <div className={classes.dialogContent}>\n            <div className={classes.dialogTitleContainer}>\n              { pendingConfirmation ?  'Confirm transaction' : 'Send' } \n              < IconButton aria-label=\"menu\" className={classes.closeIcon} onClick={this.handleSendDialogClose}>\n                <img src={closeIcon} className={classes.iconButton} alt=\"\" />\n              </IconButton >\n            </div>\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange('email')}\n              variant=\"outlined\"\n            />\n\n            <TextField\n              fullWidth\n              disabled={pendingConfirmation}\n              error={amountError}\n              className={classes.textField}\n              id=\"outlined-amount\"\n              label=\"Amount in Sats\"\n              name=\"amount\"\n              helperText={amountHelperText}\n              value={amount}\n              onChange={this.handleChange('amount')}\n              variant=\"outlined\"\n            />\n\n            {\n              pendingConfirmation ?\n\n                <Button\n                  className={classes.confirmButton}\n                  size=\"large\"\n                  variant={'contained'}\n                  color=\"primary\"\n                  fullWidth\n                  onClick={this.handleOnClick}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      variant=\"indeterminate\"\n                      disableShrink\n                      size={24}\n                      thickness={4}\n                    />\n                  ) : (\n                      'Confirm transaction'\n                    )}\n                </Button>\n\n                :\n\n                <div>\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleSendEmail}\n                  >\n                    Send email\n                  </Button>\n\n                  <div className={classes.textSeperator}>\n                    Or\n                  </div>\n\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant={'contained'}\n                    color=\"primary\"\n                    fullWidth\n                    onClick={this.handleDownloadGiftReceipt}\n                  >\n                    Download gift receipt\n                  </Button>\n                </div>\n            }\n          </div>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nWallet.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Wallet)"]},"metadata":{},"sourceType":"module"}