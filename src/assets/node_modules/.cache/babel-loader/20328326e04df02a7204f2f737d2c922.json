{"ast":null,"code":"var _jsxFileName = \"/Users/satraj/Documents/web/satstreet/src/components/main/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { palette } from '../../constants/styles';\nimport logoIcon from '../../images/logo.png';\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px'\n    }\n  },\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    }\n  },\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n  textField: {\n    marginTop: '25px'\n  }\n};\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      emailHelperText: '',\n      emailError: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value,\n        emailHelperText: '',\n        emailError: false\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.validateForms();\n    };\n  }\n\n  validateForms() {\n    const email = this.state.email;\n    var emailHasError = false;\n    var emailErrorText = \"\";\n\n    if (email === \"\") {\n      emailHasError = true;\n      emailErrorText = \"Please enter a valid email.\";\n    }\n\n    if (emailHasError) {\n      this.displayFormError(emailHasError, emailErrorText);\n    } else {\n      this.recoverPassword();\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText) {\n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText\n    });\n  }\n\n  recoverPassword() {\n    this.setState({\n      isLoading: true\n    });\n    setTimeout(function () {//this.props.completedSignIn()\n    }.bind(this), 1000);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          email = _this$state.email,\n          emailHelperText = _this$state.emailHelperText,\n          emailError = _this$state.emailError,\n          isLoading = _this$state.isLoading;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logoIcon,\n      className: classes.logoIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Account recovery\"), React.createElement(TextField, {\n      fullWidth: true,\n      error: emailError,\n      className: classes.textField,\n      id: \"outlined-email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      helperText: emailHelperText,\n      value: email,\n      onChange: this.handleChange('email'),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: 'contained',\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, isLoading ? React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      size: 24,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }) : 'Send recovery email'))));\n  }\n\n}\n\nForgotPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ForgotPassword);","map":{"version":3,"sources":["/Users/satraj/Documents/web/satstreet/src/components/main/ForgotPassword.js"],"names":["React","Component","PropTypes","Button","CircularProgress","Paper","Typography","TextField","withStyles","palette","logoIcon","styles","button","margin","container","display","justifyContent","contentContainer","flexDirection","alignItems","padding","paper","position","width","boxShadow","borderRadius","top","border","borderColor","gray","marginBottom","objectFit","height","textField","marginTop","ForgotPassword","state","email","emailHelperText","emailError","handleChange","name","event","setState","target","value","handleOnClick","validateForms","emailHasError","emailErrorText","displayFormError","recoverPassword","isLoading","setTimeout","bind","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport { palette } from '../../constants/styles'\nimport logoIcon from '../../images/logo.png'\n\nconst styles = {\n  button: {\n    margin: '30px 0 0 0'\n  },\n\n  container: {\n    display: 'flex',\n    justifyContent: 'center'\n  }, \n\n  contentContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '40px 20px 40px 20px',\n\n    '@media (min-width:780px)': {\n      padding: '40px 40px 40px 40px',\n    },\n  },\n\n  paper: {\n    position: 'absolute',\n    width: '100%',\n    boxShadow: 'none',\n    borderRadius: '5px',\n\n    '@media (min-width:780px)': {\n      top: '20%',\n      width: '500px',\n      border: '1px solid',\n      borderColor: palette.gray[0]\n    },\n  },\n\n  logoIcon: {\n    marginBottom: '30px',\n    objectFit: 'contain',\n    height: '40px',\n    width: '40px'\n  },\n\n  textField: {\n    marginTop: '25px'\n  }\n}\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    emailHelperText: '',\n    emailError: false\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      emailHelperText: '',\n      emailError: false\n    })\n  }\n\n  handleOnClick = event => {\n    this.validateForms()\n  }\n\n  validateForms() { \n    const { email } = this.state\n\n    var emailHasError = false\n    var emailErrorText = \"\"\n    \n    if (email === \"\") { \n      emailHasError = true\n      emailErrorText = \"Please enter a valid email.\"\n    }\n\n    if (emailHasError) {\n      this.displayFormError(emailHasError, emailErrorText)\n    } else {\n      this.recoverPassword()\n    }\n  }\n\n  displayFormError(emailHasError, emailErrorText) { \n    this.setState({\n      emailError: emailHasError,\n      emailHelperText: emailErrorText\n    })\n  }\n\n  recoverPassword() { \n    this.setState({ isLoading: true })\n\n    setTimeout(\n      function() {\n        //this.props.completedSignIn()\n      }.bind(this),\n      1000,\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n    const { email, emailHelperText, emailError, isLoading } = this.state\n\n    return (\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n          <div className={classes.contentContainer}>\n            <img src={logoIcon} className={classes.logoIcon} alt=\"\" />\n\n            <Typography variant=\"h4\" gutterBottom>\n              Account recovery\n            </Typography>\n\n            <TextField\n              fullWidth\n              error={emailError}\n              className={classes.textField}\n              id=\"outlined-email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              helperText={emailHelperText}\n              value={email}\n              onChange={this.handleChange('email')}\n              variant=\"outlined\"\n            />\n\n            <Button\n              className={classes.button}\n              size=\"large\"\n              variant={'contained'}\n              color=\"primary\"\n              fullWidth\n              onClick={this.handleOnClick}\n            >\n            {isLoading ? (\n                <CircularProgress\n                  variant=\"indeterminate\"\n                  disableShrink\n                  size={24}\n                  thickness={4}\n                />\n              ) : (\n                'Send recovery email'\n              )}\n            </Button>\n\n          </div>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nForgotPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}